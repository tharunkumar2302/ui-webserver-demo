{"version":3,"sources":["app/redux/actions/ProfileActions.js","app/views/bulk-profileuploads/BulkUploads.jsx"],"names":["getExportTemplateDetails","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","res","wrap","_context3","prev","next","requestClient","get","API","GET_EXPORT_TEMPLATE_API","responseType","sent","abrupt","type","payload","data","stop","apply","arguments","getProfileCV","_ref4","_callee4","resumeId","_context4","concat","PROFILE_API","_x3","postProfileDetails","_ref5","_callee5","_context5","post","_x4","postCandidateInvite","_ref6","_callee6","_context6","CANDIDATE_DETAILS_API","_x5","postProfileExportAllDetails","_ref10","_callee9","exportid","selectItem","excelExport","pay","_context9","POST_PROFILE_EXPORTALL_API","PROFILE_SEARCH_API","_x9","_x10","_x11","_x12","postProfileImportDetails","_ref11","_callee10","formData","_context10","POST_PROFILE_IMPORT_API","_x13","postUploadS3Details","_ref12","_callee11","_context11","POST_UPLOAD_S3_API","_x14","patchProfileDetails","_ref13","_callee12","id","firstName","lastName","email","phone_no","current_location","marital_status","status","present_address","date_of_birth","current_company","experience","education","primary_skill","secondary_skill","education_details","experience_details","current_ctc","expected_ctc","current_designation","industry","current_employment_status","notice_period","prefered_location","ready_to_relocate","overseas_experience","having_passport","passport_validity","visa","About","_context12","patch","_x15","_x16","_x17","_x18","_x19","_x20","_x21","_x22","_x23","_x24","_x25","_x26","_x27","_x28","_x29","_x30","_x31","_x32","_x33","_x34","_x35","_x36","_x37","_x38","_x39","_x40","_x41","_x42","_x43","_x44","deleteProfileDetails","_ref14","_callee13","deleteHelper","_context13","delete","_x45","Heading","styled","Typography","fontSize","fontWeight","textAlign","lineHeight","CardStyle","Card","height","width","UploadFileRoundedIcon","color","ProfileUpload","_ref","Object","assign","_objectDestructuringEmpty","React","useRef","_React$useState","useState","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","alertMsg","setAlertMsg","_React$useState5","_React$useState6","severity","setSeverity","_React$useState7","_React$useState8","alertOpen","setAlertOpen","_useState","_useState2","completedUploads","setCompletedUploads","_useState3","_useState4","failedUploads","setFailedUploads","_useState5","_useState6","inQueue","setInQueue","_useState7","_useState8","inProgress","setInProgress","_useState9","_useState10","selectedFiles","setSelectedFiles","bulkUpload","BulkUpload","concurrency","requestArguments","_ref2","file","fileHierarchy","FormData","append","url","method","headers","localStorageAccessToken","lastProgressUpload","onUpdate","IN_QUEUE","IN_PROGRESS","FAILED_UPLOADS","COMPLETED_UPLOADS","size","onUploadUpdate","onUploadComplete","console","log","requestOptions","uploadProgress","isFileHierarchy","_bulkUpload$getContro","getControls","cancel","destroy","retry","updateQueue","_jsxs","_Fragment","children","_jsx","Grid","style","display","justifyContent","marginRight","Button","variant","component","endIcon","CloudUploadIcon","length","hidden","multiple","onChange","_callee","e","allowedFileTypes","isValid","i","_context","CURRENTUSER_API","target","files","includes","start","_x","sx","flexGrow","padding","border","level","marginTop","AlertMsg","open","handle","_","reason","Msg"],"mappings":"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","file":"static/js/45.76c13df2.chunk.js","sourcesContent":["import requestClient from '../../apiManager/interceptors'\r\nimport API from 'app/apiManager/endpoints';\r\nimport {apiLimit50000 } from 'app/utils/constant';\r\nexport const GET_PROFILE_DETAILS = 'GET_PROFILE_DETAILS';\r\nexport const GET_PROFILE_SEARCH_DETAILS = 'GET_PROFILE_SEARCH_DETAILS';\r\nexport const GET_EXPORT_TEMPLATE_DETAILS = 'GET_EXPORT_TEMPLATE_DETAILS';\r\nexport const GET_PROFILE_CV_DOWNLOAD = 'GET_PROFILE_CV_DOWNLOAD';\r\nexport const POST_PROFILE_DETAILS = 'POST_PROFILE_DETAILS';\r\nexport const POST_PROFILE_SEARCH_DETAILS = 'POST_PROFILE_SEARCH_DETAILS';\r\nexport const POST_PROFILE_EXPORTALL_DETAILS = 'POST_PROFILE_EXPORTALL_DETAILS';\r\nexport const POST_PROFILE_IMPORT_DETAILS = 'POST_PROFILE_IMPORT_DETAILS';\r\nexport const POST_UPLOAD_S3_DETAILS = 'POST_UPLOAD_S3_DETAILS';\r\nexport const POST_PROFILE_WITHOUTCV_DETAILS = 'POST_PROFILE_WITHOUTCV_DETAILS';\r\nexport const PATCH_PROFILE_DETAILS = 'PATCH_PROFILE_DETAILS';\r\nexport const DELETE_PROFILE_DETAILS = 'DELETE_PROFILE_DETAILS';\r\nexport const POST_CANDIDATE_INVITE = 'POST_CANDIDTE_INVITE';\r\n\r\nexport const getProfileDetails = async (data) => {\r\n  const res = await requestClient.get(`${API.PROFILE_API}?${apiLimit50000}`, { params: { status: data } })\r\n  return ({\r\n    type: GET_PROFILE_DETAILS,\r\n    payload: res.data,\r\n  });\r\n};\r\nexport const getProfileSearchDetails = async (searchVal) => {\r\n  const res = await requestClient.get(`${API.PROFILE_SEARCH_API}?keyword=${searchVal}&${apiLimit50000}`)\r\n  return ({\r\n    type: GET_PROFILE_SEARCH_DETAILS,\r\n    payload: res.data,\r\n  });\r\n};\r\nexport const getExportTemplateDetails = async () => {\r\n  const res = await requestClient.get(API.GET_EXPORT_TEMPLATE_API, { responseType: \"blob\" })\r\n  return ({\r\n    type: GET_EXPORT_TEMPLATE_DETAILS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const getProfileCV = async (resumeId) => {\r\n  const res = await requestClient.get(`${API.PROFILE_API}/downloadresume/${resumeId}`, { responseType: \"blob\" })\r\n  return ({\r\n    type: GET_PROFILE_CV_DOWNLOAD,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const postProfileDetails = async (data) => {\r\n  const payload = data;\r\n  const res = await requestClient.post(API.PROFILE_API, payload)\r\n  return ({\r\n    type: POST_PROFILE_DETAILS,\r\n    payload: res,\r\n  });\r\n};\r\n\r\nexport const postCandidateInvite = async (data) => {\r\n  const payload = data;\r\n  const res = await requestClient.post(`${API.CANDIDATE_DETAILS_API}/invite`, payload)\r\n  return ({\r\n    type: POST_CANDIDATE_INVITE,\r\n    payload: res,\r\n  });\r\n};\r\n\r\nexport const postProfileSearchDetails = async (filters, limit) => {\r\n  const payload = { filters, limit };\r\n  const res = await requestClient.post(`${API.PROFILE_SEARCH_API}?`, payload)\r\n  return ({\r\n    type: POST_PROFILE_SEARCH_DETAILS,\r\n    payload: res,\r\n  });\r\n};\r\n\r\nexport const postWithoutCvDetails = async ({ ...data }) => {\r\n  const payload = { ...data };\r\n  const res = await requestClient.post(`${API.PROFILE_SEARCH_API}?`, payload)\r\n  return ({\r\n    type: POST_PROFILE_WITHOUTCV_DETAILS,\r\n    payload: res,\r\n  });\r\n};\r\n\r\nexport const postProfileExportAllDetails = async (exportid, selectItem, excelExport, pay) => {\r\n  const payload = selectItem ? excelExport : pay;\r\n  const res = await requestClient.post(exportid ? API.POST_PROFILE_EXPORTALL_API : API.PROFILE_SEARCH_API, payload, { responseType: \"blob\" });\r\n  return ({\r\n    type: POST_PROFILE_EXPORTALL_DETAILS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const postProfileImportDetails = async (formData) => {\r\n  const payload = formData;\r\n  const res = await requestClient.post(API.POST_PROFILE_IMPORT_API, payload)\r\n  return ({\r\n    type: POST_PROFILE_IMPORT_DETAILS,\r\n    payload: res,\r\n  });\r\n};\r\nexport const postUploadS3Details = async (formData) => {\r\n  const payload = formData;\r\n  const res = await requestClient.post(API.POST_UPLOAD_S3_API, payload)\r\n  return ({\r\n    type: POST_UPLOAD_S3_DETAILS,\r\n    payload: res,\r\n  });\r\n};\r\n\r\nexport const patchProfileDetails = async (id, firstName, lastName, email, phone_no, current_location, marital_status, status, present_address, date_of_birth, current_company, experience, education, primary_skill, secondary_skill, education_details, experience_details, current_ctc, expected_ctc, current_designation, industry, current_employment_status, notice_period, prefered_location, ready_to_relocate, overseas_experience, having_passport, passport_validity, visa, About) => {\r\n  const payload = {\r\n    \"firstName\": firstName,\r\n    \"lastName\": lastName,\r\n    \"email\": email,\r\n    \"phone_no\": phone_no,\r\n    \"current_location\": current_location,\r\n    \"marital_status\": marital_status,\r\n    \"status\": status,\r\n    \"present_address\": present_address,\r\n    \"date_of_birth\": date_of_birth,\r\n    \"current_company\": current_company,\r\n    \"experience\": experience,\r\n    \"education\": education,\r\n    \"primary_skill\": primary_skill,\r\n    \"secondary_skill\": secondary_skill,\r\n    \"education_details\": education_details,\r\n    \"experience_details\": experience_details,\r\n    \"current_ctc\": current_ctc,\r\n    \"expected_ctc\": expected_ctc,\r\n    \"current_designation\": current_designation,\r\n    \"industry\": industry,\r\n    \"current_employment_status\": current_employment_status,\r\n    \"notice_period\": notice_period,\r\n    \"prefered_location\": prefered_location,\r\n    \"ready_to_relocate\": ready_to_relocate,\r\n    \"overseas_experience\": overseas_experience,\r\n    \"having_passport\": having_passport,\r\n    \"passport_validity\": passport_validity,\r\n    \"visa\": visa,\r\n    \"About\": About\r\n  };\r\n  const res = await requestClient.patch(`${API.PROFILE_API}/${id}`, payload)\r\n  return ({\r\n    type: PATCH_PROFILE_DETAILS,\r\n    payload: res,\r\n  });\r\n};\r\n\r\nexport const deleteProfileDetails = async (deleteHelper) => {\r\n  const res = await requestClient.delete(`${API.PROFILE_API}/${deleteHelper}`)\r\n  return ({\r\n    type: DELETE_PROFILE_DETAILS,\r\n    payload: res,\r\n  });\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport BulkUpload from \"browser-bulk-upload\";\r\nimport AlertMsg from \"app/components/AlertMsg/AlertMsg\";\r\nimport API from 'app/apiManager/endpoints';\r\nimport React, { useState } from \"react\";\r\nimport UploadFileRoundedIcon from '@mui/icons-material/UploadFileRounded';\r\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\r\nimport {\r\n  postUploadS3Details,\r\n} from \"app/redux/actions/ProfileActions\";\r\nimport {\r\n  Typography,\r\n  styled,\r\n  Button,\r\n  Icon,\r\n  IconButton,\r\n  Snackbar,\r\n  Alert,\r\n  Paper,\r\n  Card,\r\n  Divider,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport LoadingBar from \"../../components/LoadingBar/LoadingBar\";\r\nimport { localStorageAccessToken } from 'app/utils/constant';\r\nimport requestClient from \"app/apiManager/interceptors\";\r\nconst Heading = styled(Typography)(() => ({\r\n  fontSize: \"1rem\",\r\n  fontWeight: \"600\",\r\n  textAlign: \"center\",\r\n  lineHeight: '5rem'\r\n}));\r\nconst CardStyle = styled(Card)(() => ({\r\n  height: '150px',\r\n  textAlign: 'center',\r\n  width: '200px'\r\n}));\r\nconst Iconstyle = styled(UploadFileRoundedIcon)(() => ({\r\n  color: 'white'\r\n}));\r\n// const Input = styled(\"input\")(() => ({\r\n//   margin: \"1rem\",\r\n//   width: \"13rem\",\r\n//   marginLeft: \"25rem\"\r\n// }));\r\n// const alertStyle = {\r\n//   top: \"-28rem\",\r\n//   left: \"auto\",\r\n//   right: \"1.15px\",\r\n// };\r\n// const buttons = {\r\n//   marginLeft: \"30px\",\r\n//   height: \"30px\",\r\n//   width: \"130px\"\r\n// }\r\nexport default function ProfileUpload({ ...props }) {\r\n  const inputRef = React.useRef(null);\r\n  const handleClick = () => {\r\n    setAlertOpen(true);\r\n  }\r\n  const handleClosed = (_, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setAlertOpen(false);\r\n  }\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [alertMsg, setAlertMsg] = React.useState(\"\");\r\n  const [severity, setSeverity] = React.useState(\"\");\r\n  const [alertOpen, setAlertOpen] = React.useState(false);\r\n  const [completedUploads, setCompletedUploads] = useState(0);\r\n  const [failedUploads, setFailedUploads] = useState(0);\r\n  const [inQueue, setInQueue] = useState(0);\r\n  const [inProgress, setInProgress] = useState(0);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  // Update the status values whenever the files object changes\r\n  const bulkUpload = new BulkUpload({\r\n    concurrency: 5,\r\n    //synchronous function for returning axios request args\r\n    requestArguments: ({ file, fileHierarchy }) => {\r\n      //fileHierarchy -> please refer isFileHierarchy flag comment below\r\n      const formData = new FormData();\r\n      formData.append(\"resumefiles\", file);\r\n      // console.log(files,'files')\r\n      // for (let i = 0; i < files.length; i++) {\r\n      //     formData.append(\"resumefiles\", files[i]);\r\n      //   }\r\n      // const res = await postUploadS3Details(formData);\r\n      // console.log(res)\r\n      const res = {\r\n        url: `${API.POST_UPLOAD_S3_API}`,\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Authorization\": `Bearer ${localStorageAccessToken()}`,\r\n        },\r\n        data: formData,\r\n      };\r\n      return res\r\n\r\n      \r\n\r\n    },\r\n    lastProgressUpload: 100, //for every 100ms download/upload progress will be updated and onUpdate callback will be invoked\r\n    onUpdate: ({\r\n      IN_QUEUE /**MAP -> [(name) => FileObj]**/,\r\n      IN_PROGRESS /**MAP -> [(name) => FileObj]**/,\r\n      FAILED_UPLOADS /**MAP -> [(name) => FileObj]**/,\r\n      COMPLETED_UPLOADS /**Number */,\r\n\r\n    }) => {\r\n      //on complete, failed, inQueue & inProgress structure update callback is invoked\r\n      onUploadUpdate({\r\n        IN_QUEUE,\r\n        IN_PROGRESS,\r\n        FAILED_UPLOADS,\r\n        COMPLETED_UPLOADS,\r\n      });\r\n    },\r\n    onUploadComplete: () => {\r\n      console.log(\"request completed\");\r\n    },\r\n    requestOptions: {\r\n      uploadProgress: true, //send request upload percentage\r\n      // downloadProgress: true, send request download percentage\r\n    },\r\n    isFileHierarchy: false /**enable this flag if you have a requirement of sending folders as a BFS like Google-Drive folder upload to fetch all folder path(s), \r\n  please use this library : https://www.npmjs.com/package/files-hierarchy \r\n  **/,\r\n  });\r\n\r\n  const { cancel, destroy, retry, updateQueue } = bulkUpload.getControls();\r\n  /**\r\n   * cancel -> cancel failed request -> cancel(FileObj)\r\n   * destroy -> cancel all inprogress and remove all inqueue request(s) -> destroy()\r\n   * retry -> retry only failed request -> retry([FileObj])\r\n   * updateQueue -> update existing queue upload. Please note if you start upload again internally updateQueue is been called\r\n   */\r\n  function onUploadUpdate({\r\n    IN_QUEUE,\r\n    IN_PROGRESS,\r\n    FAILED_UPLOADS,\r\n    COMPLETED_UPLOADS, //number\r\n  }) {\r\n\r\n    // console.log(COMPLETED_UPLOADS,'COMPLETED_UPLOADS')\r\n    // console.log(IN_QUEUE,'Queue')\r\n    // console.log(FAILED_UPLOADS,'FAILED_UPLOADS')\r\n    // console.log(IN_PROGRESS,'IN_PROGRESS')\r\n\r\n\r\n    setCompletedUploads(COMPLETED_UPLOADS);\r\n    setFailedUploads(FAILED_UPLOADS.size);\r\n    setInQueue(IN_QUEUE.size);\r\n    setInProgress(IN_PROGRESS.size);\r\n    /**FAILED|IN_QUEUE, IN_PROGRESS -> \r\n      MAP{ FILE_NAME_ID -> \r\n     FileObj = {\r\n        file: File | null;\r\n        fileHierarchy: FileHierarchy | null;\r\n        status: FileStatus;\r\n        uploadCount?: number;\r\n        downloadCount?: number;\r\n        isCancelled?: boolean; //if cancelled by user else request failed\r\n        id: string;\r\n        lastProgressUpdated?: number;\r\n      };\r\n      }**/\r\n  }\r\n  //start the upload\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Heading>Resumes Bulk Uploads</Heading>\r\n        <Grid style={{ display: 'flex', justifyContent: 'end', marginRight: '1rem' }}>\r\n          <Button variant=\"contained\" component=\"label\" endIcon={<CloudUploadIcon />}>\r\n          Resumes Bulk Upload  ({selectedFiles.length})\r\n            <input hidden multiple type=\"file\" onChange={async(e) => {\r\n               const response = await requestClient.get(API.CURRENTUSER_API)\r\n              setSelectedFiles(e.target.files);\r\n              const allowedFileTypes = [\"application/pdf\", \"application/msword\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"];\r\n            \r\n              let isValid = true;\r\n\r\n            // Check if all selected files have allowed file types\r\n            for (let i = 0; i < e.target.files.length; i++) {\r\n              if (!allowedFileTypes.includes(e.target.files[i].type)) {\r\n                isValid = false;\r\n                break;\r\n              }\r\n            }\r\n\r\n            if (isValid) {\r\n              bulkUpload.start(e.target.files);\r\n            } else {\r\n              setAlertOpen(true);\r\n              setSeverity(\"error\");\r\n              setAlertMsg(\"Only PDF, DOC, and DOCX files are allowed.\");\r\n            }\r\n          }} />\r\n          </Button>\r\n        </Grid>\r\n        <Card sx={{ height: 300, flexGrow: 1 }} style={{ display: \"flex\", justifyContent:'space-between', height: '100%', padding: '5rem' }}>\r\n          <CardStyle style={{border: '2px solid #0080004f'}}>\r\n            <Typography level=\"body3\" style={{ marginTop: '4rem', fontSize: '15px' }} sx={{ fontWeight: '500' }}>\r\n              Completed\r\n            </Typography>\r\n            <Typography level=\"body3\" sx={{ fontWeight: 'md' }}>\r\n              {completedUploads}\r\n            </Typography>\r\n          </CardStyle>\r\n          <CardStyle style={{border: '2px solid red'}}>\r\n            <Typography level=\"body3\" style={{ marginTop: '4rem', fontSize: '15px' }} sx={{ fontWeight: '500' }}>\r\n              Failed\r\n            </Typography>\r\n\r\n            <Typography level=\"body3\" sx={{ fontWeight: 'md' }}>\r\n              {failedUploads}\r\n            </Typography>\r\n          </CardStyle>\r\n          <CardStyle style={{border: '2px solid #0049ff66'}}>\r\n            <Typography level=\"body3\" style={{ marginTop: '4rem', fontSize: '15px' }} sx={{ fontWeight: '500' }}>\r\n              In Queue\r\n            </Typography>\r\n\r\n            <Typography level=\"body3\" sx={{ fontWeight: 'md' }}>\r\n              {inQueue}\r\n            </Typography>\r\n          </CardStyle>\r\n          <CardStyle style={{border: '2px solid #dcdc5ac4'}}>\r\n            <Typography level=\"body3\" style={{ marginTop: '4rem', fontSize: '15px' }} sx={{ fontWeight: '500' }}>\r\n              In Progress\r\n            </Typography>\r\n\r\n            <Typography level=\"body3\" sx={{ fontWeight: 'md' }}>\r\n              {inProgress}\r\n            </Typography>\r\n          </CardStyle>\r\n        </Card>      \r\n      </Card>\r\n      <AlertMsg\r\n        open={alertOpen}\r\n        handle={handleClosed}\r\n        severity={severity}\r\n        Msg={alertMsg}\r\n      />\r\n\r\n    </>\r\n  );\r\n};\r\n"],"sourceRoot":""}