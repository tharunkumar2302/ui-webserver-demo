{"version":3,"sources":["app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx","app/views/material-kit/snackbar/CustomizedSnackbar.jsx","app/views/material-kit/snackbar/DirectionSnackbar.jsx","app/views/material-kit/snackbar/LongLengthSnackbar.jsx","app/views/material-kit/snackbar/PositionedSnackbar.jsx","app/views/material-kit/snackbar/SimpleSnackbar.jsx","app/views/material-kit/snackbar/StackedSnackbar.jsx","app/views/material-kit/snackbar/TransitionSnackbar.jsx","app/views/material-kit/snackbar/AppSnackbar.jsx"],"names":["StyledIconButton","styled","IconButton","_ref","padding","theme","spacing","ConsecutiveSnackbars","_useState","useState","_useState2","_slicedToArray","queue","setQueue","_useState3","_useState4","open","setOpen","_useState5","_useState6","messageInfo","setMessageInfo","handleClick","message","state","concat","_toConsumableArray","key","Date","getTime","processQueue","length","shift","handleClose","_","reason","_jsxs","Box","children","_jsx","Button","onClick","Snackbar","onClose","autoHideDuration","onExited","ContentProps","anchorOrigin","vertical","horizontal","id","action","color","size","CloseIcon","ContentRoot","fontSize","backgroundColor","green","amber","palette","error","main","primary","opacity","marginRight","display","alignItems","margin","CustomizedSnackbars","_React$useState","React","_React$useState2","alertOpen","setAlertOpen","variant","className","Alert","severity","sx","width","m","TransitionLeft","props","Slide","_objectSpread","direction","TransitionUp","TransitionRight","TransitionDown","DirectionSnackbar","undefined","TransitionType","setTransitionType","slideDirection","TransitionComponent","SnackbarRoot","maxWidth","LongTextSnackbar","SnackbarContent","PositionedSnackbar","setState","newState","SimpleSnackbar","useTheme","StackedSnackbar","enqueueSnackbar","useSnackbar","Fragment","IntegrationNotistack","SnackbarProvider","maxSnack","SlideTransition","GrowTransition","Grow","TransitionsSnackbar","Transition","Fade","Container","_ref2","_defineProperty","breakpoints","down","marginBottom","AppSnackbar","Breadcrumb","routeSegments","name","path","Stack","SimpleCard","title","ConsecutiveSnackbar"],"mappings":"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","file":"static/js/57.cd92cb30.chunk.js","sourcesContent":["import CloseIcon from \"@mui/icons-material/Close\";\r\nimport { Box, Button, IconButton, Snackbar } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\nimport { useState } from \"react\";\r\n\r\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\r\n  padding: theme.spacing(0.5),\r\n}));\r\n\r\nconst ConsecutiveSnackbars = () => {\r\n  const [queue, setQueue] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [messageInfo, setMessageInfo] = useState({});\r\n\r\n  const handleClick = (message) => () => {\r\n    setQueue((state) => [...state, { message, key: new Date().getTime() }]);\r\n\r\n    if (open) {\r\n      // immediately begin dismissing current message\r\n      // to start showing new one\r\n      setOpen(false);\r\n    } else {\r\n      processQueue();\r\n    }\r\n  };\r\n\r\n  const processQueue = () => {\r\n    if (queue.length > 0) {\r\n      setMessageInfo(queue.shift());\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleClose = (_, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleExited = () => processQueue();\r\n\r\n  return (\r\n    <Box>\r\n      <Button onClick={handleClick(\"Message A\")}>Show message A</Button>\r\n      <Button onClick={handleClick(\"Message B\")}>Show message B</Button>\r\n      <Snackbar\r\n        open={open}\r\n        key={messageInfo.key}\r\n        onClose={handleClose}\r\n        autoHideDuration={6000}\r\n        onExited={handleExited}\r\n        ContentProps={{ \"aria-describedby\": \"message-id\" }}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n        message={<span id=\"message-id\">{messageInfo.message}</span>}\r\n        action={[\r\n          <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n            UNDO\r\n          </Button>,\r\n          <StyledIconButton key=\"close\" color=\"inherit\" aria-label=\"Close\" onClick={handleClose}>\r\n            <CloseIcon />\r\n          </StyledIconButton>,\r\n        ]}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ConsecutiveSnackbars;\r\n","import { Alert, Button, Snackbar } from \"@mui/material\";\r\nimport { amber, green } from \"@mui/material/colors\";\r\nimport { styled } from \"@mui/system\";\r\nimport React from \"react\";\r\n\r\nconst ContentRoot = styled(\"div\")(({ theme }) => ({\r\n  \"& .icon\": { fontSize: 20 },\r\n  \"& .success\": { backgroundColor: green[600] },\r\n  \"& .warning\": { backgroundColor: amber[700] },\r\n  \"& .error\": { backgroundColor: theme.palette.error.main },\r\n  \"& .info\": { backgroundColor: theme.palette.primary.main },\r\n  \"& .iconVariant\": { opacity: 0.9, marginRight: theme.spacing(1) },\r\n  \"& .message\": { display: \"flex\", alignItems: \"center\" },\r\n  \"& .margin\": { margin: theme.spacing(1) },\r\n}));\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const [alertOpen, setAlertOpen] = React.useState(false);\r\n\r\n  function handleClick() {\r\n    setAlertOpen(true);\r\n  }\r\n  function handleClose(_, reason) {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setAlertOpen(false);\r\n  }\r\n\r\n  return (\r\n    <ContentRoot>\r\n      <Button variant=\"outlined\" className=\"margin\" onClick={handleClick}>\r\n        Open success snackbar\r\n      </Button>\r\n\r\n      <Snackbar open={alertOpen} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\" sx={{ width: \"100%\" }} variant=\"filled\">\r\n          This is a success message!\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Alert onClose={handleClose} sx={{ m: 1 }} severity=\"error\" variant=\"filled\">\r\n        This is an error message!\r\n      </Alert>\r\n\r\n      <Alert onClose={handleClose} sx={{ m: 1 }} severity=\"warning\" variant=\"filled\">\r\n        This is a warning message!\r\n      </Alert>\r\n\r\n      <Alert onClose={handleClose} sx={{ m: 1 }} severity=\"info\" variant=\"filled\">\r\n        This is an information message!\r\n      </Alert>\r\n\r\n      <Alert onClose={handleClose} sx={{ m: 1 }} severity=\"success\" variant=\"filled\">\r\n        This is a success message!\r\n      </Alert>\r\n    </ContentRoot>\r\n  );\r\n}\r\n","import { Box, Button, Slide, Snackbar } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction=\"left\" />;\r\n}\r\n\r\nfunction TransitionUp(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nfunction TransitionRight(props) {\r\n  return <Slide {...props} direction=\"right\" />;\r\n}\r\n\r\nfunction TransitionDown(props) {\r\n  return <Slide {...props} direction=\"down\" />;\r\n}\r\n\r\nconst DirectionSnackbar = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [TransitionType, setTransitionType] = useState(undefined);\r\n\r\n  const handleClick = (slideDirection) => () => {\r\n    setOpen(true);\r\n    setTransitionType(() => slideDirection);\r\n  };\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <Box>\r\n      <Button onClick={handleClick(TransitionLeft)}>Right</Button>\r\n      <Button onClick={handleClick(TransitionUp)}>Up</Button>\r\n      <Button onClick={handleClick(TransitionRight)}>Left</Button>\r\n      <Button onClick={handleClick(TransitionDown)}>Down</Button>\r\n\r\n      <Snackbar\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={TransitionType}\r\n        ContentProps={{ \"aria-describedby\": \"message-id\" }}\r\n        message={<span id=\"message-id\">I love snacks</span>}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DirectionSnackbar;\r\n","import { Button, SnackbarContent, styled } from \"@mui/material\";\r\n\r\nconst action = (\r\n  <Button color=\"secondary\" size=\"small\">\r\n    lorem ipsum dolorem\r\n  </Button>\r\n);\r\n\r\nconst SnackbarRoot = styled(\"div\")(({ theme }) => ({\r\n  maxWidth: 600,\r\n  \"& .snackbar\": { margin: theme.spacing(1) },\r\n}));\r\n\r\nexport default function LongTextSnackbar() {\r\n  return (\r\n    <SnackbarRoot>\r\n      <SnackbarContent className=\"snackbar\" message=\"I love snacks.\" action={action} />\r\n\r\n      <SnackbarContent\r\n        className=\"snackbar\"\r\n        message={`I love candy. I love cookies. I love cupcakes. \\\r\n          I love cheesecake. I love chocolate.`}\r\n      />\r\n\r\n      <SnackbarContent\r\n        className=\"snackbar\"\r\n        message=\"I love candy. I love cookies. I love cupcakes.\"\r\n        action={action}\r\n      />\r\n\r\n      <SnackbarContent\r\n        className=\"snackbar\"\r\n        message={\r\n          \"I love candy. I love cookies. I love cupcakes. \\\r\n          I love cheesecake. I love chocolate.\"\r\n        }\r\n        action={action}\r\n      />\r\n    </SnackbarRoot>\r\n  );\r\n}\r\n","import { Box, Button, Snackbar } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nexport default function PositionedSnackbar() {\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    vertical: \"top\",\r\n    horizontal: \"center\",\r\n  });\r\n\r\n  const { vertical, horizontal, open } = state;\r\n\r\n  const handleClick = (newState) => () => {\r\n    setState({ open: true, ...newState });\r\n  };\r\n\r\n  function handleClose() {\r\n    setState({ ...state, open: false });\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Button onClick={handleClick({ vertical: \"top\", horizontal: \"center\" })}>Top-Center</Button>\r\n      <Button onClick={handleClick({ vertical: \"top\", horizontal: \"right\" })}>Top-Right</Button>\r\n\r\n      <Button onClick={handleClick({ vertical: \"bottom\", horizontal: \"right\" })}>\r\n        Bottom-Right\r\n      </Button>\r\n\r\n      <Button onClick={handleClick({ vertical: \"bottom\", horizontal: \"center\" })}>\r\n        Bottom-Center\r\n      </Button>\r\n\r\n      <Button onClick={handleClick({ vertical: \"bottom\", horizontal: \"left\" })}>Bottom-Left</Button>\r\n\r\n      <Button onClick={handleClick({ vertical: \"top\", horizontal: \"left\" })}>Top-Left</Button>\r\n\r\n      <Snackbar\r\n        open={open}\r\n        onClose={handleClose}\r\n        key={`${vertical},${horizontal}`}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        ContentProps={{ \"aria-describedby\": \"message-id\" }}\r\n        message={<span id=\"message-id\">I love snacks</span>}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import CloseIcon from \"@mui/icons-material/Close\";\r\nimport { Box, Button, IconButton, Snackbar, useTheme } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function SimpleSnackbar() {\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  function handleClick() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(_, reason) {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Button onClick={handleClick}>Open simple snackbar</Button>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        ContentProps={{ \"aria-describedby\": \"message-id\" }}\r\n        message={<span id=\"message-id\">Note archived</span>}\r\n        action={[\r\n          <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n            UNDO\r\n          </Button>,\r\n          <IconButton\r\n            key=\"close\"\r\n            aria-label=\"Close\"\r\n            color=\"inherit\"\r\n            onClick={handleClose}\r\n            sx={{ padding: theme.spacing(0.5) }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>,\r\n        ]}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import { Button } from \"@mui/material\";\r\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\r\nimport React from \"react\";\r\n\r\nfunction StackedSnackbar() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleClick = () => enqueueSnackbar(\"I love snacks.\");\r\n\r\n  const handleClickVariant = (variant) => () => {\r\n    // variant could be success, error, warning, info, or default\r\n    enqueueSnackbar(\"This is a warning message!\", { variant });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button onClick={handleClick}>Show snackbar</Button>\r\n      <Button onClick={handleClickVariant(\"warning\")}>Show warning snackbar</Button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default function IntegrationNotistack() {\r\n  return (\r\n    <SnackbarProvider maxSnack={3}>\r\n      <StackedSnackbar />\r\n    </SnackbarProvider>\r\n  );\r\n}\r\n","import { Button, Fade, Grow, Slide, Snackbar } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nfunction SlideTransition(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nfunction GrowTransition(props) {\r\n  return <Grow {...props} />;\r\n}\r\n\r\nexport default function TransitionsSnackbar() {\r\n  const [state, setState] = React.useState({\r\n    open: false,\r\n    Transition: Fade,\r\n  });\r\n\r\n  const handleClick = (Transition) => () => {\r\n    setState({ open: true, Transition });\r\n  };\r\n\r\n  function handleClose() {\r\n    setState({ ...state, open: false });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick(GrowTransition)}>Grow Transition</Button>\r\n      <Button onClick={handleClick(Fade)}>Fade Transition</Button>\r\n      <Button onClick={handleClick(SlideTransition)}>Slide Transition</Button>\r\n      <Snackbar\r\n        open={state.open}\r\n        onClose={handleClose}\r\n        TransitionComponent={state.Transition}\r\n        ContentProps={{ \"aria-describedby\": \"message-id\" }}\r\n        message={<span id=\"message-id\">I love snacks</span>}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { Box, Stack, styled } from \"@mui/material\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport ConsecutiveSnackbar from \"./ConsecutiveSnackbar\";\r\nimport CustomizedSnackbars from \"./CustomizedSnackbar\";\r\nimport DirectionSnackbar from \"./DirectionSnackbar\";\r\nimport LongTextSnackbar from \"./LongLengthSnackbar\";\r\nimport PositionedSnackbar from \"./PositionedSnackbar\";\r\nimport SimpleSnackbar from \"./SimpleSnackbar\";\r\nimport IntegrationNotistack from \"./StackedSnackbar\";\r\nimport TransitionsSnackbar from \"./TransitionSnackbar\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst AppSnackbar = () => {\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb\r\n          routeSegments={[{ name: \"Material\", path: \"/material\" }, { name: \"Snackbar\" }]}\r\n        />\r\n      </Box>\r\n\r\n      <Stack spacing={3}>\r\n        <SimpleCard title=\"simple snackbar\">\r\n          <SimpleSnackbar />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"customized snackbar\">\r\n          <CustomizedSnackbars />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"positioned snackbar\">\r\n          <PositionedSnackbar />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"message length\">\r\n          <LongTextSnackbar />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"transition\">\r\n          <TransitionsSnackbar />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"consecutive snackbar\">\r\n          <ConsecutiveSnackbar />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"Control Slide direction\">\r\n          <DirectionSnackbar />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"complementary project\">\r\n          <IntegrationNotistack />\r\n        </SimpleCard>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AppSnackbar;\r\n"],"sourceRoot":""}