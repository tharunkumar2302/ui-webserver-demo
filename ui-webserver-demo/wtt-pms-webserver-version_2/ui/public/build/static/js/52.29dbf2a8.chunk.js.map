{"version":3,"sources":["app/views/material-kit/dialog/ConfirmationDialog.jsx","app/views/material-kit/dialog/CustomizedDialog.jsx","app/views/material-kit/dialog/DialogTransition.jsx","app/views/material-kit/dialog/FormDialog.jsx","app/views/material-kit/dialog/FullScreenDialog.jsx","app/views/material-kit/dialog/OptimalSizeDialog.jsx","app/views/material-kit/dialog/ResponsiveDialog.jsx","app/views/material-kit/dialog/SimpleAlerts.jsx","app/views/material-kit/dialog/SimpleDialog.jsx","app/views/material-kit/dialog/AppDialog.jsx"],"names":["options","ConfirmationDialogRaw","props","onClose","valueProp","value","open","other","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","setValue","radioGroupRef","useRef","useEffect","_jsxs","Dialog","_objectSpread","maxWidth","disableEscapeKeyDown","TransitionProps","onExiting","current","focus","children","_jsx","DialogTitle","id","DialogContent","dividers","RadioGroup","ref","name","onChange","_","newValue","map","option","FormControlLabel","control","Radio","label","DialogActions","Button","variant","color","onClick","DialogRoot","styled","_ref","theme","width","value100Per","backgroundColor","palette","background","paper","maxHeight","ConfirmationDialog","_React$useState","React","_React$useState2","setOpen","_React$useState3","_React$useState4","List","component","role","ListItem","button","divider","disabled","ListItemText","primary","secondary","keepMounted","className","DialogTitleRoot","MuiDialogTitle","margin","padding","spacing","position","right","top","grey","disableTypography","Typography","IconButton","CloseIcon","MuiDialogContent","_ref2","MuiDialogActions","_ref3","CustomizedDialogs","handleClose","gutterBottom","Transition","forwardRef","Slide","direction","AlertDialogSlide","TransitionComponent","DialogContentText","FormDialog","Box","TextField","autoFocus","type","fullWidth","FullScreenDialog","useTheme","fullScreen","AppBar","sx","Toolbar","edge","H6","flex","marginLeft","Divider","display","flexDirection","marginTop","minWidth","MaxWidthDialog","setFullWidth","_React$useState5","_React$useState6","setMaxWidth","noValidate","FormControl","InputLabel","htmlFor","Select","event","target","inputProps","MenuItem","Switch","checked","ResponsiveDialog","useMediaQuery","breakpoints","down","AlertDialog","emails","SimpleDialog","selectedValue","handleListItemClick","email","ListItemAvatar","Avatar","blue","PersonIcon","AddIcon","SimpleDialogDemo","_useState3","_useState4","setSelectedValue","Container","_defineProperty","marginBottom","AppDialog","Breadcrumb","routeSegments","path","Stack","SimpleCard","title"],"mappings":"4VAgBMA,EAAU,CACd,OACA,QACA,WACA,QACA,WACA,gBACA,OACA,SACA,SACA,QACA,QACA,UACA,SACA,WAGF,SAASC,EAAsBC,GAC7B,IAAQC,EAA8CD,EAA9CC,QAAgBC,EAA8BF,EAArCG,MAAkBC,EAAmBJ,EAAnBI,KAASC,EAAKC,YAAKN,EAAKO,GAC3DC,EAA0BC,mBAASP,GAAUQ,EAAAC,YAAAH,EAAA,GAAtCL,EAAKO,EAAA,GAAEE,EAAQF,EAAA,GAChBG,EAAgBC,iBAAO,MAE7BC,qBAAU,WACHX,GACHQ,EAASV,EAEb,GAAG,CAACA,EAAWE,IAaf,OACEY,eAACC,IAAMC,wBAAA,CACLC,SAAS,KACTC,sBAAoB,EACpBC,gBAAiB,CAAEC,UAfD,WACU,OAA1BT,EAAcU,SAChBV,EAAcU,QAAQC,OAE1B,GAYI,kBAAgB,4BAChBpB,KAAMA,GACFC,GAAK,IAAAoB,SAAA,CAETC,cAACC,IAAW,CAACC,GAAG,4BAA2BH,SAAC,mBAC5CC,cAACG,IAAa,CAACC,UAAQ,EAAAL,SACrBC,cAACK,IAAU,CACTC,IAAKnB,EACL,aAAW,WACXoB,KAAK,WACL9B,MAAOA,EACP+B,SAlBa,SAACC,EAAGC,GAAQ,OAAKxB,EAASwB,EAAU,EAkB1BX,SAEtB3B,EAAQuC,KAAI,SAACC,GAAM,OAClBZ,cAACa,IAAgB,CAACpC,MAAOmC,EAAqBE,QAASd,cAACe,IAAK,IAAKC,MAAOJ,GAAnCA,EAA6C,QAIzFtB,eAAC2B,IAAa,CAAAlB,SAAA,CACZC,cAACkB,IAAM,CAACC,QAAQ,WAAWC,MAAM,YAAYC,QA7B9B,WAAH,OAAS9C,GAAU,EA6BoCwB,SAAC,WAGpEC,cAACkB,IAAM,CAACG,QA/BG,WAAH,OAAS9C,EAAQE,EAAO,EA+BL2C,MAAM,UAASrB,SAAC,aAMnD,CAQA,IAAMuB,EAAaC,YAAO,MAAPA,EAAc,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAK,MAAQ,CAC/CC,MAAOC,cACPlC,SAAU,IACVmC,gBAAiBH,EAAMI,QAAQC,WAAWC,MAC1C,WAAY,CAAEL,MAAO,MAAOM,UAAW,KACxC,IAEc,SAASC,IACtB,IAAAC,EAAwBC,IAAMpD,UAAS,GAAMqD,EAAAnD,YAAAiD,EAAA,GAAtCxD,EAAI0D,EAAA,GAAEC,EAAOD,EAAA,GACpBE,EAA0BH,IAAMpD,SAAS,SAAQwD,EAAAtD,YAAAqD,EAAA,GAA1C7D,EAAK8D,EAAA,GAAErD,EAAQqD,EAAA,GActB,OACEvC,cAACsB,EAAU,CAAAvB,SACTT,eAACkD,IAAI,CAACC,UAAU,MAAMC,KAAK,OAAM3C,SAAA,CAC/BC,cAAC2C,IAAQ,CAACC,QAAM,EAACC,SAAO,EAACC,UAAQ,EAACJ,KAAK,WAAU3C,SAC/CC,cAAC+C,IAAY,CAACC,QAAQ,oBAGxBhD,cAAC2C,IAAQ,CACPC,QAAM,EACNC,SAAO,EACP,gBAAc,gBACd,aAAW,iBACXxB,QAxBmB,WACzBgB,GAAQ,EACV,EAuBQK,KAAK,WAAU3C,SAEfC,cAAC+C,IAAY,CAACC,QAAQ,iBAAiBC,UAAWxE,MAGpDuB,cAAC2C,IAAQ,CAACC,QAAM,EAACC,SAAO,EAACC,UAAQ,EAACJ,KAAK,WAAU3C,SAC/CC,cAAC+C,IAAY,CAACC,QAAQ,gCAAgCC,UAAU,aAGlEjD,cAAC3B,EAAqB,CACpB6E,aAAW,EACXxE,KAAMA,EACND,MAAOA,EACP0E,UAAU,QACVjD,GAAG,gBACH3B,QApCW,SAACmC,GAClB2B,GAAQ,GAEJ3B,GACFxB,EAASwB,EAEb,QAmCF,C,wCC7IM0C,EAAkB7B,YAAO8B,IAAP9B,EAAuB,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAK,MAAQ,CAC7D6B,OAAQ,EACRC,QAAS9B,EAAM+B,QAAQ,GACvB,iBAAkB,CAChBC,SAAU,WACVC,MAAOjC,EAAM+B,QAAQ,GACrBG,IAAKlC,EAAM+B,QAAQ,GACnBpC,MAAOK,EAAMI,QAAQ+B,KAAK,MAE7B,IAEK3D,EAAc,SAAC3B,GACnB,IAAQyB,EAAsBzB,EAAtByB,SAAUxB,EAAYD,EAAZC,QAClB,OACEe,eAAC8D,EAAe,CAACS,mBAAiB,EAAA9D,SAAA,CAChCC,cAAC8D,IAAU,CAAC3C,QAAQ,KAAIpB,SAAEA,IACzBxB,EACCyB,cAAC+D,IAAU,CAAC,aAAW,QAAQZ,UAAU,cAAc9B,QAAS9C,EAAQwB,SACtEC,cAACgE,IAAS,MAEV,OAGV,EAEM7D,EAAgBoB,YAAO0C,IAAP1C,EAAyB,SAAA2C,GAAQ,MAAQ,CAC7D,SAAU,CAAEX,QADyCW,EAALzC,MACrB+B,QAAQ,IACpC,IAEKvC,EAAgBM,YAAO4C,IAAP5C,EAAyB,SAAA6C,GAAQ,MAAQ,CAC7D,SAAU,CAAEd,OAAQ,EAAGC,QAD8Ba,EAAL3C,MACV+B,QAAQ,IAC/C,IAgDca,EA9CW,WACxB,IAAAvF,EAAwBC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAhCJ,EAAIM,EAAA,GAAEqD,EAAOrD,EAAA,GAIdsF,EAAc,WAAH,OAASjC,GAAQ,EAAO,EAEzC,OACE/C,eAAA,OAAAS,SAAA,CACEC,cAACkB,IAAM,CAACC,QAAQ,WAAWC,MAAM,YAAYC,QANzB,WAAH,OAASgB,GAAQ,EAAM,EAM8BtC,SAAC,gBAIvET,eAACC,IAAM,CAAChB,QAAS+F,EAAa,kBAAgB,0BAA0B5F,KAAMA,EAAKqB,SAAA,CACjFC,cAACC,EAAW,CAACC,GAAG,0BAA0B3B,QAAS+F,EAAYvE,SAAC,gBAIhET,eAACa,EAAa,CAACC,UAAQ,EAAAL,SAAA,CACrBC,cAAC8D,IAAU,CAACS,cAAY,EAAAxE,SAAC,iLAKzBC,cAAC8D,IAAU,CAACS,cAAY,EAAAxE,SAAC,+IAKzBC,cAAC8D,IAAU,CAACS,cAAY,EAAAxE,SAAC,kMAO3BC,cAACiB,EAAa,CAAAlB,SACZC,cAACkB,IAAM,CAACG,QAASiD,EAAalD,MAAM,UAASrB,SAAC,wBAOxD,E,kBC/EMyE,EAAarC,IAAMsC,YAAW,SAAoBnG,EAAOgC,GAC7D,OAAON,cAAC0E,IAAKlF,YAAA,CAACmF,UAAU,KAAKrE,IAAKA,GAAShC,GAC7C,IAEe,SAASsG,IACtB,IAAA1C,EAAwBC,IAAMpD,UAAS,GAAMqD,EAAAnD,YAAAiD,EAAA,GAAtCxD,EAAI0D,EAAA,GAAEC,EAAOD,EAAA,GAMdkC,EAAY,WAChBjC,GAAQ,EACV,EAEA,OACE/C,eAAA,OAAAS,SAAA,CACEC,cAACkB,IAAM,CAACC,QAAQ,WAAWC,MAAM,UAAUC,QAVxB,WACrBgB,GAAQ,EACV,EAQwEtC,SAAC,0BAGrET,eAACC,IAAM,CACLb,KAAMA,EACNwE,aAAW,EACX3E,QAAS+F,EACTO,oBAAqBL,EACrB,kBAAgB,2BAChB,mBAAiB,iCAAgCzE,SAAA,CAEjDC,cAACC,IAAW,CAACC,GAAG,2BAA0BH,SAAC,mCAE3CC,cAACG,IAAa,CAAAJ,SACZC,cAAC8E,IAAiB,CAAC5E,GAAG,iCAAgCH,SAAC,oIAMzDT,eAAC2B,IAAa,CAAAlB,SAAA,CACZC,cAACkB,IAAM,CAACG,QAASiD,EAAalD,MAAM,UAASrB,SAAC,aAI9CC,cAACkB,IAAM,CAACG,QAASiD,EAAalD,MAAM,UAASrB,SAAC,kBAOxD,C,sBChDe,SAASgF,IACtB,IAAA7C,EAAwBC,IAAMpD,UAAS,GAAMqD,EAAAnD,YAAAiD,EAAA,GAAtCxD,EAAI0D,EAAA,GAAEC,EAAOD,EAAA,GAMdkC,EAAa,WACjBjC,GAAQ,EACV,EAEA,OACE/C,eAAC0F,IAAG,CAAAjF,SAAA,CACFC,cAACkB,IAAM,CAACC,QAAQ,WAAWC,MAAM,UAAUC,QAVzB,WACpBgB,GAAQ,EACV,EAQwEtC,SAAC,qBAIrET,eAACC,IAAM,CAACb,KAAMA,EAAMH,QAAS+F,EAAa,kBAAgB,oBAAmBvE,SAAA,CAC3EC,cAACC,IAAW,CAACC,GAAG,oBAAmBH,SAAC,cACpCT,eAACa,IAAa,CAAAJ,SAAA,CACZC,cAAC8E,IAAiB,CAAA/E,SAAC,2GAInBC,cAACiF,IAAS,CACRC,WAAS,EACT5B,OAAO,QACPpD,GAAG,OACHc,MAAM,gBACNmE,KAAK,QACLC,WAAS,OAGb9F,eAAC2B,IAAa,CAAAlB,SAAA,CACZC,cAACkB,IAAM,CAACC,QAAQ,WAAWC,MAAM,YAAYC,QAASiD,EAAYvE,SAAC,WAGnEC,cAACkB,IAAM,CAACG,QAASiD,EAAalD,MAAM,UAASrB,SAAC,sBAOxD,C,+CCtCMyE,EAAarC,IAAMsC,YAAW,SAAoBnG,EAAOgC,GAC7D,OAAON,cAAC0E,IAAKlF,YAAA,CAACmF,UAAU,KAAKrE,IAAKA,GAAShC,GAC7C,IAEe,SAAS+G,IACtB,IAAM5D,EAAQ6D,cACdpD,EAAwBC,IAAMpD,UAAS,GAAMqD,EAAAnD,YAAAiD,EAAA,GAAtCxD,EAAI0D,EAAA,GAAEC,EAAOD,EAAA,GAKpB,SAASkC,IACPjC,GAAQ,EACV,CAEA,OACE/C,eAAC0F,IAAG,CAAAjF,SAAA,CACFC,cAACkB,IAAM,CAACC,QAAQ,WAAWC,MAAM,UAAUC,QAT/C,WACEgB,GAAQ,EACV,EAOwEtC,SAAC,4BAIrET,eAACC,IAAM,CAACgG,YAAU,EAAC7G,KAAMA,EAAMH,QAAS+F,EAAaO,oBAAqBL,EAAWzE,SAAA,CACnFC,cAACwF,IAAM,CAACC,GAAI,CAAEhC,SAAU,YAAa1D,SACnCT,eAACoG,IAAO,CAAA3F,SAAA,CACNC,cAAC+D,IAAU,CAAC4B,KAAK,QAAQvE,MAAM,UAAUC,QAASiD,EAAa,aAAW,QAAOvE,SAC/EC,cAACgE,IAAS,MAEZhE,cAAC4F,IAAE,CAACH,GAAI,CAAEI,KAAM,EAAGC,WAAYrE,EAAM+B,QAAQ,IAAKzD,SAAC,UACnDC,cAACkB,IAAM,CAACE,MAAM,UAAUC,QAASiD,EAAYvE,SAAC,cAMlDT,eAACkD,IAAI,CAAAzC,SAAA,CACHC,cAAC2C,IAAQ,CAACC,QAAM,EAAA7C,SACdC,cAAC+C,IAAY,CAACC,QAAQ,iBAAiBC,UAAU,cAGnDjD,cAAC+F,IAAO,IAER/F,cAAC2C,IAAQ,CAACC,QAAM,EAAA7C,SACdC,cAAC+C,IAAY,CAACC,QAAQ,gCAAgCC,UAAU,qBAM5E,C,sDCjDM3B,GAAaC,YAAO,MAAPA,EAAc,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAK,MAAQ,CAC/C,SAAU,CACRuE,QAAS,OACT1C,OAAQ,OACR2C,cAAe,SACfvE,MAAO,eAET,iBAAkB,CAChBwE,UAAWzE,EAAM+B,QAAQ,GACzB2C,SAAU,KAEZ,sBAAuB,CACrBD,UAAWzE,EAAM+B,QAAQ,IAE5B,IAEc,SAAS4C,KACtB,IAAAlE,EAAwBC,IAAMpD,UAAS,GAAMqD,EAAAnD,YAAAiD,EAAA,GAAtCxD,EAAI0D,EAAA,GAAEC,EAAOD,EAAA,GACpBE,EAAkCH,IAAMpD,UAAS,GAAKwD,EAAAtD,YAAAqD,EAAA,GAA/C8C,EAAS7C,EAAA,GAAE8D,EAAY9D,EAAA,GAC9B+D,EAAgCnE,IAAMpD,SAAS,MAAKwH,EAAAtH,YAAAqH,EAAA,GAA7C7G,EAAQ8G,EAAA,GAAEC,EAAWD,EAAA,GAK5B,SAASjC,IACPjC,GAAQ,EACV,CAQA,OACE/C,eAACgC,GAAU,CAAAvB,SAAA,CACTC,cAACkB,IAAM,CAACC,QAAQ,WAAWC,MAAM,UAAUC,QAf/C,WACEgB,GAAQ,EACV,EAawEtC,SAAC,0BAIrET,eAACC,IAAM,CACLb,KAAMA,EACN0G,UAAWA,EACX3F,SAAUA,EACVlB,QAAS+F,EACT,kBAAgB,yBAAwBvE,SAAA,CAExCC,cAACC,IAAW,CAACC,GAAG,yBAAwBH,SAAC,mBAEzCT,eAACa,IAAa,CAAAJ,SAAA,CACZC,cAAC8E,IAAiB,CAAA/E,SAAC,8DAInBT,eAAA,QAAMmH,YAAU,EAAA1G,SAAA,CACdT,eAACoH,KAAW,CAACvD,UAAU,cAAapD,SAAA,CAClCC,cAAC2G,KAAU,CAACC,QAAQ,YAAW7G,SAAC,aAChCT,eAACuH,KAAM,CACLpI,MAAOgB,EACPe,SAhCd,SAA8BsG,GAC5BN,EAAYM,EAAMC,OAAOtI,MAC3B,EA+BcuI,WAAY,CAAEzG,KAAM,YAAaL,GAAI,aAAcH,SAAA,CAEnDC,cAACiH,KAAQ,CAACxI,OAAO,EAAMsB,SAAC,UACxBC,cAACiH,KAAQ,CAACxI,MAAM,KAAIsB,SAAC,OACrBC,cAACiH,KAAQ,CAACxI,MAAM,KAAIsB,SAAC,OACrBC,cAACiH,KAAQ,CAACxI,MAAM,KAAIsB,SAAC,OACrBC,cAACiH,KAAQ,CAACxI,MAAM,KAAIsB,SAAC,OACrBC,cAACiH,KAAQ,CAACxI,MAAM,KAAIsB,SAAC,aAIzBC,cAACa,IAAgB,CACfsC,UAAU,mBACVnC,MAAM,aACNF,QACEd,cAACkH,KAAM,CAACC,QAAS/B,EAAW5E,SA7C1C,SAA+BsG,GAC7BT,EAAaS,EAAMC,OAAOI,QAC5B,EA2C2E1I,MAAM,sBAM3EuB,cAACiB,IAAa,CAAAlB,SACZC,cAACkB,IAAM,CAACG,QAASiD,EAAalD,MAAM,UAASrB,SAAC,iBAOxD,C,cC7Fe,SAASqH,KACtB,IAAAlF,EAAwBC,IAAMpD,UAAS,GAAMqD,EAAAnD,YAAAiD,EAAA,GAAtCxD,EAAI0D,EAAA,GAAEC,EAAOD,EAAA,GACdX,EAAQ6D,cACRC,EAAa8B,aAAc5F,EAAM6F,YAAYC,KAAK,OAMlDjD,EAAa,WACjBjC,GAAQ,EACV,EAEA,OACE/C,eAAC0F,IAAG,CAAAjF,SAAA,CACFC,cAACkB,IAAM,CAACC,QAAQ,WAAWC,MAAM,UAAUC,QAVxB,WACrBgB,GAAQ,EACV,EAQwEtC,SAAC,2BAIrET,eAACC,IAAM,CACLgG,WAAYA,EACZ7G,KAAMA,EACNH,QAAS+F,EACT,kBAAgB,0BAAyBvE,SAAA,CAEzCC,cAACC,IAAW,CAACC,GAAG,0BAAyBH,SAAC,mCAE1CC,cAACG,IAAa,CAAAJ,SACZC,cAAC8E,IAAiB,CAAA/E,SAAC,oIAMrBT,eAAC2B,IAAa,CAAAlB,SAAA,CACZC,cAACkB,IAAM,CAACG,QAASiD,EAAalD,MAAM,UAASrB,SAAC,aAI9CC,cAACkB,IAAM,CAACG,QAASiD,EAAalD,MAAM,UAAU8D,WAAS,EAAAnF,SAAC,kBAOlE,CChDe,SAASyH,KACtB,IAAA1I,EAAwBC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAhCJ,EAAIM,EAAA,GAAEqD,EAAOrD,EAAA,GAGdsF,EAAc,WAAH,OAASjC,GAAQ,EAAO,EAEzC,OACE/C,eAAC0F,IAAG,CAAAjF,SAAA,CACFC,cAACkB,IAAM,CAACC,QAAQ,WAAWC,MAAM,UAAUC,QALvB,WAAH,OAASgB,GAAQ,EAAM,EAK4BtC,SAAC,sBAIrET,eAACC,IAAM,CACLb,KAAMA,EACNH,QAAS+F,EACT,kBAAgB,qBAChB,mBAAiB,2BAA0BvE,SAAA,CAE3CC,cAACC,IAAW,CAACC,GAAG,qBAAoBH,SAAC,mCAErCC,cAACG,IAAa,CAAAJ,SACZC,cAAC8E,IAAiB,CAAC5E,GAAG,2BAA0BH,SAAC,oIAMnDT,eAAC2B,IAAa,CAAAlB,SAAA,CACZC,cAACkB,IAAM,CAACG,QAASiD,EAAalD,MAAM,UAASrB,SAAC,aAI9CC,cAACkB,IAAM,CAACG,QAASiD,EAAalD,MAAM,UAAU8D,WAAS,EAAAnF,SAAC,kBAOlE,C,0GChCM0H,GAAS,CAAC,qBAAsB,oBAEtC,SAASC,GAAapJ,GACpB,IAAQC,EAAqCD,EAArCC,QAASoJ,EAA4BrJ,EAA5BqJ,cAAkBhJ,EAAKC,YAAKN,EAAKO,IAK5C+I,EAAqB,SAACnJ,GAC1BF,EAAQE,EACV,EAEA,OACEa,eAACC,IAAMC,wBAAA,CAACjB,QARS,WACjBA,EAAQoJ,EACV,EAMgC,kBAAgB,uBAA0BhJ,GAAK,IAAAoB,SAAA,CAC3EC,cAACC,IAAW,CAACC,GAAG,sBAAqBH,SAAC,uBACtCT,eAACkD,IAAI,CAAAzC,SAAA,CACF0H,GAAO9G,KAAI,SAACkH,GAAK,OAChBvI,eAACqD,IAAQ,CAACC,QAAM,EAACvB,QAAS,kBAAMuG,EAAoBC,EAAM,EAAC9H,SAAA,CACzDC,cAAC8H,KAAc,CAAA/H,SACbC,cAAC+H,KAAM,CAACtC,GAAI,CAAE7D,gBAAiBoG,KAAK,KAAM5G,MAAO4G,KAAK,MAAOjI,SAC3DC,cAACiI,KAAU,QAGfjI,cAAC+C,IAAY,CAACC,QAAS6E,MANwCA,EAOtD,IAGbvI,eAACqD,IAAQ,CAACC,QAAM,EAACvB,QAAS,kBAAMuG,EAAoB,aAAa,EAAC7H,SAAA,CAChEC,cAAC8H,KAAc,CAAA/H,SACbC,cAAC+H,KAAM,CAAAhI,SACLC,cAACkI,KAAO,QAGZlI,cAAC+C,IAAY,CAACC,QAAQ,yBAKhC,CAQe,SAASmF,KACtB,IAAArJ,EAAwBC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAhCJ,EAAIM,EAAA,GAAEqD,EAAOrD,EAAA,GACpBoJ,EAA0CrJ,mBAAS,oBAAmBsJ,EAAApJ,YAAAmJ,EAAA,GAA/DT,EAAaU,EAAA,GAAEC,EAAgBD,EAAA,GAStC,OACE/I,eAAC0F,IAAG,CAAAjF,SAAA,CACFT,eAACwE,IAAU,CAAC3C,QAAQ,YAAWpB,SAAA,CAAC,aAAW4H,KAC3C3H,cAAA,SACAA,cAACkB,IAAM,CAACC,QAAQ,WAAWC,MAAM,UAAUC,QAXvB,WAAH,OAASgB,GAAQ,EAAM,EAW4BtC,SAAC,uBAGrEC,cAAC0H,GAAY,CAACC,cAAeA,EAAejJ,KAAMA,EAAMH,QAZxC,SAACE,GACnB4D,GAAQ,GACRiG,EAAiB7J,EACnB,MAYF,CCtEA,IAAM8J,GAAYhH,YAAO,MAAPA,EAAc,SAAAC,GAAA,IAAA0C,EAAGzC,EAAKD,EAALC,MAAK,OAAAyC,EAAA,CACtCZ,OAAQ,QAAMkF,YAAAtE,EACbzC,EAAM6F,YAAYC,KAAK,MAAQ,CAAEjE,OAAQ,SAAQkF,YAAAtE,EAClD,gBAAesE,YAAA,CACbC,aAAc,QACbhH,EAAM6F,YAAYC,KAAK,MAAQ,CAAEkB,aAAc,UAAQvE,CAAA,IAoD7CwE,UAhDG,WAChB,OACEpJ,eAACiJ,GAAS,CAAAxI,SAAA,CACRC,cAACgF,IAAG,CAAC7B,UAAU,aAAYpD,SACzBC,cAAC2I,IAAU,CAACC,cAAe,CAAC,CAAErI,KAAM,WAAYsI,KAAM,aAAe,CAAEtI,KAAM,eAG/EjB,eAACwJ,IAAK,CAACtF,QAAS,EAAEzD,SAAA,CAChBC,cAAC+I,IAAU,CAACC,MAAM,gBAAejJ,SAC/BC,cAACmI,GAAgB,MAGnBnI,cAAC+I,IAAU,CAACC,MAAM,eAAcjJ,SAC9BC,cAACwH,GAAW,MAGdxH,cAAC+I,IAAU,CAACC,MAAM,aAAYjJ,SAC5BC,cAAC4E,EAAgB,MAGnB5E,cAAC+I,IAAU,CAACC,MAAM,cAAajJ,SAC7BC,cAAC+E,EAAU,MAGb/E,cAAC+I,IAAU,CAACC,MAAM,oBAAmBjJ,SACnCC,cAACqE,EAAiB,MAGpBrE,cAAC+I,IAAU,CAACC,MAAM,qBAAoBjJ,SACpCC,cAACqF,EAAgB,MAGnBrF,cAAC+I,IAAU,CAACC,MAAM,wBAAuBjJ,SACvCC,cAACoG,GAAc,MAGjBpG,cAAC+I,IAAU,CAACC,MAAM,oBAAmBjJ,SACnCC,cAACoH,GAAgB,MAGnBpH,cAAC+I,IAAU,CAACC,MAAM,sBAAqBjJ,SACrCC,cAACiC,EAAkB,WAK7B,C","file":"static/js/52.29dbf2a8.chunk.js","sourcesContent":["import Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport { styled } from '@mui/system';\r\nimport { value100Per } from 'app/utils/constant';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst options = [\r\n  'None',\r\n  'Atria',\r\n  'Callisto',\r\n  'Dione',\r\n  'Ganymede',\r\n  'Hangouts Call',\r\n  'Luna',\r\n  'Oberon',\r\n  'Phobos',\r\n  'Pyxis',\r\n  'Sedna',\r\n  'Titania',\r\n  'Triton',\r\n  'Umbriel',\r\n];\r\n\r\nfunction ConfirmationDialogRaw(props) {\r\n  const { onClose, value: valueProp, open, ...other } = props;\r\n  const [value, setValue] = useState(valueProp);\r\n  const radioGroupRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setValue(valueProp);\r\n    }\r\n  }, [valueProp, open]);\r\n\r\n  const handleEntering =() => {\r\n    if (radioGroupRef.current !== null) {\r\n      radioGroupRef.current.focus();\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => onClose();\r\n  const handleOk = () => onClose(value);\r\n\r\n  const handleChange = (_, newValue) => setValue(newValue);\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"xs\"\r\n      disableEscapeKeyDown\r\n      TransitionProps={{ onExiting: handleEntering }}\r\n      aria-labelledby=\"confirmation-dialog-title\"\r\n      open={open}\r\n      {...other}\r\n    >\r\n      <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\r\n      <DialogContent dividers>\r\n        <RadioGroup\r\n          ref={radioGroupRef}\r\n          aria-label=\"Ringtone\"\r\n          name=\"ringtone\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n          {options.map((option) => (\r\n            <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\r\n          ))}\r\n        </RadioGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" color=\"secondary\" onClick={handleCancel}>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleOk} color=\"primary\">\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nconst DialogRoot = styled('div')(({ theme }) => ({\r\n  width: value100Per,\r\n  maxWidth: 360,\r\n  backgroundColor: theme.palette.background.paper,\r\n  '& .paper': { width: '80%', maxHeight: 435 },\r\n}));\r\n\r\nexport default function ConfirmationDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState('Dione');\r\n\r\n  const handleClickListItem =()=> {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose =(newValue)=> {\r\n    setOpen(false);\r\n\r\n    if (newValue) {\r\n      setValue(newValue);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DialogRoot>\r\n      <List component=\"div\" role=\"list\">\r\n        <ListItem button divider disabled role=\"listitem\">\r\n          <ListItemText primary=\"Interruptions\" />\r\n        </ListItem>\r\n\r\n        <ListItem\r\n          button\r\n          divider\r\n          aria-controls=\"ringtone-menu\"\r\n          aria-label=\"Phone ringtone\"\r\n          onClick={handleClickListItem}\r\n          role=\"listitem\"\r\n        >\r\n          <ListItemText primary=\"Phone ringtone\" secondary={value} />\r\n        </ListItem>\r\n\r\n        <ListItem button divider disabled role=\"listitem\">\r\n          <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n        </ListItem>\r\n\r\n        <ConfirmationDialogRaw\r\n          keepMounted\r\n          open={open}\r\n          value={value}\r\n          className=\"paper\"\r\n          id=\"ringtone-menu\"\r\n          onClose={handleClose}\r\n        />\r\n      </List>\r\n    </DialogRoot>\r\n  );\r\n}\r\n","import CloseIcon from '@mui/icons-material/Close';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport MuiDialogActions from '@mui/material/DialogActions';\r\nimport MuiDialogContent from '@mui/material/DialogContent';\r\nimport MuiDialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport { styled } from '@mui/system';\r\nimport { useState } from 'react';\r\n\r\nconst DialogTitleRoot = styled(MuiDialogTitle)(({ theme }) => ({\r\n  margin: 0,\r\n  padding: theme.spacing(2),\r\n  '& .closeButton': {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n}));\r\n\r\nconst DialogTitle = (props) => {\r\n  const { children, onClose } = props;\r\n  return (\r\n    <DialogTitleRoot disableTypography>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"Close\" className=\"closeButton\" onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitleRoot>\r\n  );\r\n};\r\n\r\nconst DialogContent = styled(MuiDialogContent)(({ theme }) => ({\r\n  '&.root': { padding: theme.spacing(2) },\r\n}));\r\n\r\nconst DialogActions = styled(MuiDialogActions)(({ theme }) => ({\r\n  '&.root': { margin: 0, padding: theme.spacing(1) },\r\n}));\r\n\r\nconst CustomizedDialogs = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\r\n        Open dialog\r\n      </Button>\r\n\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Modal title\r\n        </DialogTitle>\r\n\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\r\n            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\n          </Typography>\r\n\r\n          <Typography gutterBottom>\r\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\r\n            lacus vel augue laoreet rutrum faucibus dolor auctor.\r\n          </Typography>\r\n\r\n          <Typography gutterBottom>\r\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\r\n            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\r\n            auctor fringilla.\r\n          </Typography>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Save changes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomizedDialogs;\r\n","import Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport React from 'react';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen =() =>{\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose=()=> {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Slide in alert dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">Use Google's location service?</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Box } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport TextField from '@mui/material/TextField';\r\nimport React from 'react';\r\n\r\nexport default function FormDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen=()=> {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose =() =>{\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button>\r\n\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"outlined\" color=\"secondary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import CloseIcon from '@mui/icons-material/Close';\r\nimport { Box } from '@mui/material';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Slide from '@mui/material/Slide';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport { useTheme } from '@mui/system';\r\nimport { H6 } from 'app/components/Typography';\r\nimport React from 'react';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog() {\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open full-screen dialog\r\n      </Button>\r\n\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar sx={{ position: 'relative' }}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"Close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <H6 sx={{ flex: 1, marginLeft: theme.spacing(2) }}>Sound</H6>\r\n            <Button color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n\r\n          <Divider />\r\n\r\n          <ListItem button>\r\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport Switch from '@mui/material/Switch';\r\nimport { styled } from '@mui/system';\r\nimport React from 'react';\r\n\r\nconst DialogRoot = styled('div')(({ theme }) => ({\r\n  '& form': {\r\n    display: 'flex',\r\n    margin: 'auto',\r\n    flexDirection: 'column',\r\n    width: 'fit-content',\r\n  },\r\n  '& .formControl': {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  '& .formControlLabel': {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function MaxWidthDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n  function handleMaxWidthChange(event) {\r\n    setMaxWidth(event.target.value);\r\n  }\r\n  function handleFullWidthChange(event) {\r\n    setFullWidth(event.target.checked);\r\n  }\r\n\r\n  return (\r\n    <DialogRoot>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open max-width dialog\r\n      </Button>\r\n\r\n      <Dialog\r\n        open={open}\r\n        fullWidth={fullWidth}\r\n        maxWidth={maxWidth}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You can set my maximum width and whether to adapt or not.\r\n          </DialogContentText>\r\n\r\n          <form noValidate>\r\n            <FormControl className=\"formControl\">\r\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n              <Select\r\n                value={maxWidth}\r\n                onChange={handleMaxWidthChange}\r\n                inputProps={{ name: 'max-width', id: 'max-width' }}\r\n              >\r\n                <MenuItem value={false}>false</MenuItem>\r\n                <MenuItem value=\"xs\">xs</MenuItem>\r\n                <MenuItem value=\"sm\">sm</MenuItem>\r\n                <MenuItem value=\"md\">md</MenuItem>\r\n                <MenuItem value=\"lg\">lg</MenuItem>\r\n                <MenuItem value=\"xl\">xl</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <FormControlLabel\r\n              className=\"formControlLabel\"\r\n              label=\"Full width\"\r\n              control={\r\n                <Switch checked={fullWidth} onChange={handleFullWidthChange} value=\"fullWidth\" />\r\n              }\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </DialogRoot>\r\n  );\r\n}\r\n","import { Box } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { useTheme } from '@mui/system';\r\nimport React from 'react';\r\n\r\nexport default function ResponsiveDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const handleClickOpen =()=> {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose =()=> {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open responsive dialog\r\n      </Button>\r\n\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">Use Google's location service?</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { useState } from 'react';\r\n\r\nexport default function AlertDialog() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <Box>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open alert dialog\r\n      </Button>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Use Google's location service?</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import AddIcon from '@mui/icons-material/Add';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport { Box } from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport { blue } from '@mui/material/colors';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Typography from '@mui/material/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\n\r\nfunction SimpleDialog(props) {\r\n  const { onClose, selectedValue, ...other } = props;\r\n\r\n  const handleClose =() =>{\r\n    onClose(selectedValue);\r\n  }\r\n  const handleListItemClick =(value)=> {\r\n    onClose(value);\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" {...other}>\r\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\r\n      <List>\r\n        {emails.map((email) => (\r\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\r\n            <ListItemAvatar>\r\n              <Avatar sx={{ backgroundColor: blue[100], color: blue[600] }}>\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={email} />\r\n          </ListItem>\r\n        ))}\r\n\r\n        <ListItem button onClick={() => handleListItemClick('addAccount')}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"add account\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  selectedValue: PropTypes.string,\r\n};\r\n\r\nexport default function SimpleDialogDemo() {\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedValue, setSelectedValue] = useState('user02@gmail.com');\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\r\n      <br />\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open simple dialog\r\n      </Button>\r\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n    </Box>\r\n  );\r\n}\r\n","import { Stack } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\nimport { Breadcrumb, SimpleCard } from 'app/components';\r\nimport ConfirmationDialog from './ConfirmationDialog';\r\nimport CustomizedDialogs from './CustomizedDialog';\r\nimport AlertDialogSlide from './DialogTransition';\r\nimport FormDialog from './FormDialog';\r\nimport FullScreenDialog from './FullScreenDialog';\r\nimport MaxWidthDialog from './OptimalSizeDialog';\r\nimport ResponsiveDialog from './ResponsiveDialog';\r\nimport AlertDialog from './SimpleAlerts';\r\nimport SimpleDialogDemo from './SimpleDialog';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\n\r\nconst AppDialog = () => {\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Dialog' }]} />\r\n      </Box>\r\n\r\n      <Stack spacing={3}>\r\n        <SimpleCard title=\"simple Dialog\">\r\n          <SimpleDialogDemo />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"alert dialog\">\r\n          <AlertDialog />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"transition\">\r\n          <AlertDialogSlide />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"form dialog\">\r\n          <FormDialog />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"customized dialog\">\r\n          <CustomizedDialogs />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"full-screen dialog\">\r\n          <FullScreenDialog />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"optimized size dialog\">\r\n          <MaxWidthDialog />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"responsive dialog\">\r\n          <ResponsiveDialog />\r\n        </SimpleCard>\r\n\r\n        <SimpleCard title=\"confirmation dialog\">\r\n          <ConfirmationDialog />\r\n        </SimpleCard>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AppDialog;\r\n"],"sourceRoot":""}