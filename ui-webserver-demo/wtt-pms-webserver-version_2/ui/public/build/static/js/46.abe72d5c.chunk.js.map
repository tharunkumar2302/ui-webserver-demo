{"version":3,"sources":["app/utils/constantDropDown.js","app/views/dashboard/Analytics.jsx"],"names":["filterOpraterValue","title","display","UserProfileStatus","UserProfileMarital_Status","UserProfileEduction","UserProfileCurrentEmploymentStatus","UserProfileYes_No","UserProfileEmployment_Type","UserProfilePrefered_location","headingDashboardChartDays","JobOpeningEmploymentType","JobOpeningWorkMode","JobOpeningMonths","ContentBox","styled","_ref","theme","_defineProperty","margin","breakpoints","down","Title","fontSize","fontWeight","lineHeight","whiteSpace","marginRight","textTransform","width","DropDown","Select","height","alignContent","Analytics","navigate","useNavigate","palette","useTheme","_useState","useState","_useState2","_slicedToArray","dashboardApi","setDashboardApi","_useState3","defaultCalendarValue","_useState4","calendarValue","setCalendarValue","_useState5","_useState6","totalResumes","setTotalResumes","_useState7","_useState8","updatedResumes","setUpdatedResumes","_useState9","_useState10","notUpdatedResumesMoreThan1Year","setNotUpdatedResumesMoreThan1Year","_useState11","_useState12","notUpdatedResumesMoreThan30daysTo1Year","setNotUpdatedResumesMoreThan30daysTo1Year","_useState13","_useState14","uploadByRecruter","setUploadByRecruter","_useState15","_useState16","uploadByCandidate","setUploadByCandidate","_useState17","_useState18","deactivatedResumes","setDeactivatedResumes","useEffect","localStorage","getItem","candidateDashboardRoute","getDashboardDetails","then","users","payload","dashboardDataGet","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","Number","notUpdatedResumes","moreThan1Year","moreThan30daysTo1Year","inLast30Days","deActivatedResumes","uploadSummary","byCandidate","today","byRecruiter","yesterday","week","month","stop","_x","apply","arguments","_jsx","Fragment","children","className","_jsxs","Grid","container","spacing","item","lg","md","sm","xs","StatCards","Card","sx","px","py","mb","headingDashboardChart","id","value","onChange","e","target","handleCalendar","map","el","MenuItem","DoughnutChart","doughnuHeight","isMobile","doughnutWidth","value100Per","color","primary","main","success","error"],"mappings":"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","file":"static/js/46.abe72d5c.chunk.js","sourcesContent":["export const filterOpraterValue = [{ title: 'equal', display: 'Equal To' }, { title: 'greaterThan', display: 'Greater Than' }, { title: 'lessThan', display: 'Less Than' }];\r\nexport const UserProfileStatus = [{ title: 'Draft', display: 'Draft' }, { title: 'Published', display: 'Published' }, { title: 'Archived', display: 'Archived' }];\r\nexport const UserProfileMarital_Status = [{ title: 'Single', display: 'Single' }, { title: 'Married', display: 'Married' }, { title: 'Divorced', display: 'Divorced' }, { title: 'Widowed', display: 'Widowed' }];\r\nexport const UserProfileEduction = [{ title: 'M.Tech', display: 'M.Tech' }, { title: 'MCA', display: 'MCA' }, { title: 'B.Tech', display: 'B.Tech' }, { title: 'BCA', display: 'BCA' }, { title: 'BSc', display: 'BSc' }];\r\nexport const UserProfileCurrentEmploymentStatus = [{ title: 'Working', display: 'Working' }, { title: 'Not Working', display: 'Not Working' }];\r\nexport const UserProfileYes_No = [{ title: 'Yes', display: 'Yes' }, { title: 'No', display: 'No' }];\r\nexport const UserProfileEmployment_Type = [{ title: 'Permanent', display: 'Permanent' }, { title: 'Temporary', display: 'Temporary' }];\r\nexport const UserProfilePrefered_location = [{ title: 'Hyderabad', display: 'Hyderabad' }, { title: 'Bangalore', display: 'Bangalore' }, { title: 'Delhi', display: 'Delhi' }, { title: 'Chennai', display: 'Chennai' }, { title: 'Mumbai', display: 'Mumbai' }];\r\nexport const headingDashboardChartDays = [{ title: 'today', display: 'Today' }, { title: 'yesterday', display: 'Yesterday' }, { title: 'week', display: 'Last Week' }, { title: 'month', display: 'Last Month' }];\r\nexport const JobOpeningEmploymentType = [{ title: 'Full Time', display: 'Full Time' }, { title: 'Contract', display: 'Contract' }];\r\nexport const JobOpeningWorkMode = [{ title: 'Work from home', display: 'Work From Home' }, { title: 'Work from office', display: 'Work From Office' }];\r\nexport const JobOpeningMonths = [{ title: '6 months', display: '6 months' }, { title: '9 months', display: '9 months' }, { title: '12 months', display: '12 months' }, { title: 'Ongoing', display: 'Ongoing' }, { title: 'Permanent', display: 'Permanent' }];\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Card, Grid, MenuItem, Select, styled, useTheme } from \"@mui/material\";\r\nimport { getDashboardDetails } from \"app/redux/actions/CommonActions\";\r\nimport { candidateDashboardRoute, defaultCalendarValue, doughnuHeight, doughnutWidth, value100Per } from \"app/utils/constant\";\r\nimport { headingDashboardChart } from \"app/utils/constantForms\";\r\nimport { isMobile } from \"app/utils/utils\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport DoughnutChart from \"./shared/Doughnut\";\r\nimport StatCards from \"./shared/StatCards\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { headingDashboardChartDays } from \"app/utils/constantDropDown\";\r\n\r\nconst ContentBox = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n}));\r\n\r\nconst Title = styled(\"span\")(() => ({\r\n  fontSize: \"12px\",\r\n  fontWeight: \"500\",\r\n  lineHeight: '1.5',\r\n  whiteSpace: 'normal',\r\n  marginRight: \".5rem\",\r\n  textTransform: \"none\",\r\n  width: \"50%\",\r\n  display: \"inline-grid\",\r\n}));\r\n\r\nconst DropDown = styled(Select)(() => ({\r\n  display: \"inline-grid\",\r\n  width: \"46%\",\r\n  height: \"44px\",\r\n  alignContent: \"center\",\r\n}));\r\n\r\nconst Analytics = () => {\r\n  const navigate = useNavigate();\r\n  const { palette } = useTheme();\r\n  const [dashboardApi, setDashboardApi] = useState();\r\n  const [calendarValue, setCalendarValue] = useState(defaultCalendarValue);\r\n  const [totalResumes, setTotalResumes] = useState(0);\r\n  const [updatedResumes, setUpdatedResumes] = useState(0);\r\n  const [notUpdatedResumesMoreThan1Year, setNotUpdatedResumesMoreThan1Year] = useState(0);\r\n  const [notUpdatedResumesMoreThan30daysTo1Year, setNotUpdatedResumesMoreThan30daysTo1Year] = useState(0);\r\n  const [uploadByRecruter, setUploadByRecruter] = useState(0);\r\n  const [uploadByCandidate, setUploadByCandidate] = useState(0);\r\n  const [deactivatedResumes, setDeactivatedResumes] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('userRole') === 'candidate') {\r\n      navigate(candidateDashboardRoute);\r\n    } else {\r\n      getDashboardDetails().then((users) => setDashboardApi(users?.payload));\r\n    }\r\n  }, []);\r\n\r\n  const dashboardDataGet = async (dashboardApi) => {\r\n    setTotalResumes(Number(dashboardApi?.totalResumes));\r\n    setNotUpdatedResumesMoreThan1Year(\r\n      Number(dashboardApi?.notUpdatedResumes.moreThan1Year)\r\n    );\r\n    setNotUpdatedResumesMoreThan30daysTo1Year(\r\n      Number(dashboardApi?.notUpdatedResumes.moreThan30daysTo1Year)\r\n    );\r\n    setUpdatedResumes(Number(dashboardApi?.updatedResumes.inLast30Days));\r\n    setDeactivatedResumes(Number(dashboardApi?.deActivatedResumes));\r\n    if (calendarValue === \"today\") {\r\n      setUploadByCandidate(\r\n        Number(dashboardApi?.uploadSummary.byCandidate.today)\r\n      );\r\n      setUploadByRecruter(\r\n        Number(dashboardApi?.uploadSummary.byRecruiter.today)\r\n      );\r\n    } else if (calendarValue === \"yesterday\") {\r\n      setUploadByCandidate(\r\n        Number(dashboardApi?.uploadSummary.byCandidate.yesterday)\r\n      );\r\n      setUploadByRecruter(\r\n        Number(dashboardApi?.uploadSummary.byRecruiter.yesterday)\r\n      );\r\n    } else if (calendarValue === \"week\") {\r\n      setUploadByCandidate(\r\n        Number(dashboardApi?.uploadSummary.byCandidate.week)\r\n      );\r\n      setUploadByRecruter(\r\n        Number(dashboardApi?.uploadSummary.byRecruiter.week)\r\n      );\r\n    } else if (calendarValue === \"month\") {\r\n      setUploadByCandidate(\r\n        Number(dashboardApi?.uploadSummary.byCandidate.month)\r\n      );\r\n      setUploadByRecruter(\r\n        Number(dashboardApi?.uploadSummary.byRecruiter.month)\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dashboardDataGet(dashboardApi);\r\n  }, [{ calendarValue, dashboardDataGet }]);\r\n\r\n  const handleCalendar =(e)=> {\r\n    setCalendarValue(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ContentBox className=\"analytics\">\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={8} md={8} sm={12} xs={12}>\r\n            <StatCards\r\n              totalResumes={totalResumes}\r\n              updatedResumes={updatedResumes}\r\n              notUpdatedResumesMoreThan1Year={notUpdatedResumesMoreThan1Year}\r\n              notUpdatedResumesMoreThan30daysTo1Year={\r\n                notUpdatedResumesMoreThan30daysTo1Year\r\n              }\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={4} md={4} sm={12} xs={12}>\r\n            <Card sx={{ px: 3, py: 2, mb: 3 }}>\r\n              <Title>{headingDashboardChart}</Title>\r\n              <DropDown\r\n                id=\"calendar\"\r\n                value={calendarValue}\r\n                onChange={(e) => handleCalendar(e)}\r\n              >{headingDashboardChartDays.map((el) => (\r\n                <MenuItem value={el.title}>\r\n                  {el.display}\r\n                </MenuItem>\r\n              ))\r\n                }\r\n              </DropDown>\r\n\r\n              <DoughnutChart\r\n                height={doughnuHeight}\r\n                width={!isMobile() ? value100Per : doughnutWidth}\r\n                color={[\r\n                  palette.primary.main,\r\n                  palette.success.main,\r\n                  palette.error.main,\r\n                ]}\r\n                deactivatedResumes={deactivatedResumes}\r\n                uploadByRecruter={uploadByRecruter}\r\n                uploadByCandidate={uploadByCandidate}\r\n              />\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </ContentBox>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n"],"sourceRoot":""}