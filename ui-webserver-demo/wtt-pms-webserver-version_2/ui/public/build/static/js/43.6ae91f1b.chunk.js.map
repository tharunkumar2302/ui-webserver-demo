{"version":3,"sources":["../node_modules/@mui/material/utils/useId.js","../node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js","../node_modules/@mui/lab/LoadingButton/LoadingButton.js","app/views/sessions/ResetPassword.jsx"],"names":["useId","getLoadingButtonUtilityClass","slot","generateUtilityClass","loadingButtonClasses","generateUtilityClasses","_excluded","LoadingButtonRoot","styled","Button","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","root","startIconLoadingStart","_defineProperty","concat","endIconLoadingEnd","_ref3","ownerState","theme","_extends","transition","transitions","create","duration","short","opacity","loadingPosition","loading","color","fullWidth","marginRight","marginLeft","LoadingButtonLoadingIndicator","loadingIndicator","capitalize","_ref7","position","visibility","display","variant","left","size","transform","vars","palette","action","disabled","right","LoadingButton","React","inProps","ref","useThemeProps","children","_props$disabled","idProp","id","_props$loading","loadingIndicatorProp","_props$loadingPositio","_props$variant","other","_objectWithoutPropertiesLoose","_jsx","CircularProgress","classes","slots","startIcon","endIcon","composedClasses","composeClasses","useUtilityClasses","loadingButtonLoadingIndicator","className","_jsxs","FlexBox","Box","alignItems","JustifyBox","justifyContent","ContentBox","height","value100Per","padding","background","ErrorMsg","fontSize","letterSpacing","margin","JWTRoot","minHeight","value100PerImp","maxWidth","borderRadius","initialValues","password","confirmPassword","validationSchema","Yup","shape","min","required","ResetPassword","navigate","useNavigate","textError","themeColors","errorColor","_useState","useState","_useState2","_slicedToArray","setLoading","_useState3","_useState4","confirmFlag","setConfirmFlag","useAuth","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","logInRoute","t0","stop","_x","apply","arguments","Card","Grid","container","item","sm","xs","p","sx","minWidth","src","width","alt","Formik","onSubmit","_ref2","errors","touched","handleChange","handleBlur","handleSubmit","TextField","type","label","labelNewPassword","onBlur","value","onChange","helperText","error","Boolean","mb","labelConfirmPassword","textcolor","my","buttonSave"],"mappings":"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","file":"static/js/43.6ae91f1b.chunk.js","sourcesContent":["import { unstable_useId as useId } from '@mui/utils';\nexport default useId;","import generateUtilityClass from '@mui/material/generateUtilityClass';\nimport generateUtilityClasses from '@mui/material/generateUtilityClasses';\nexport function getLoadingButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiLoadingButton', slot);\n}\nconst loadingButtonClasses = generateUtilityClasses('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);\nexport default loadingButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"disabled\", \"id\", \"loading\", \"loadingIndicator\", \"loadingPosition\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport loadingButtonClasses, { getLoadingButtonUtilityClass } from './loadingButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    loading,\n    loadingPosition,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading'],\n    startIcon: [loading && `startIconLoading${capitalize(loadingPosition)}`],\n    endIcon: [loading && `endIconLoading${capitalize(loadingPosition)}`],\n    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${capitalize(loadingPosition)}`]\n  };\n  const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\n// TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core\nconst rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\nconst LoadingButtonRoot = styled(Button, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiLoadingButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root, styles.startIconLoadingStart && {\n      [`& .${loadingButtonClasses.startIconLoadingStart}`]: styles.startIconLoadingStart\n    }, styles.endIconLoadingEnd && {\n      [`& .${loadingButtonClasses.endIconLoadingEnd}`]: styles.endIconLoadingEnd\n    }];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0\n  }\n}, ownerState.loadingPosition === 'center' && {\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  [`&.${loadingButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginRight: -8\n  }\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginLeft: -8\n  }\n}));\nconst LoadingButtonLoadingIndicator = styled('div', {\n  name: 'MuiLoadingButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.loadingIndicator, styles[`loadingIndicator${capitalize(ownerState.loadingPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  visibility: 'visible',\n  display: 'flex'\n}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  left: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {\n  left: 6\n}, ownerState.loadingPosition === 'center' && {\n  left: '50%',\n  transform: 'translate(-50%)',\n  color: (theme.vars || theme).palette.action.disabled\n}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  right: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {\n  right: 6\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  position: 'relative',\n  left: -10\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  position: 'relative',\n  right: -10\n}));\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLoadingButton'\n  });\n  const {\n      children,\n      disabled = false,\n      id: idProp,\n      loading = false,\n      loadingIndicator: loadingIndicatorProp,\n      loadingPosition = 'center',\n      variant = 'text'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const id = useId(idProp);\n  const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : /*#__PURE__*/_jsx(CircularProgress, {\n    \"aria-labelledby\": id,\n    color: \"inherit\",\n    size: 16\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    loading,\n    loadingIndicator,\n    loadingPosition,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const loadingButtonLoadingIndicator = loading ? /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n    className: classes.loadingIndicator,\n    ownerState: ownerState,\n    children: loadingIndicator\n  }) : null;\n  return /*#__PURE__*/_jsxs(LoadingButtonRoot, _extends({\n    disabled: disabled || loading,\n    id: id,\n    ref: ref\n  }, other, {\n    variant: variant,\n    classes: classes,\n    ownerState: ownerState,\n    children: [ownerState.loadingPosition === 'end' ? children : loadingButtonLoadingIndicator, ownerState.loadingPosition === 'end' ? loadingButtonLoadingIndicator : children]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LoadingButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the loading indicator is shown.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Element placed before the children if the button is in loading state.\n   * The node should contain an element with `role=\"progressbar\"` with an accessible name.\n   * By default we render a `CircularProgress` that is labelled by the button itself.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n  /**\n   * The loading indicator can be positioned on the start, end, or the center of the button.\n   * @default 'center'\n   */\n  loadingPosition: chainPropTypes(PropTypes.oneOf(['start', 'end', 'center']), props => {\n    if (props.loadingPosition === 'start' && !props.startIcon) {\n      return new Error(`MUI: The loadingPosition=\"start\" should be used in combination with startIcon.`);\n    }\n    if (props.loadingPosition === 'end' && !props.endIcon) {\n      return new Error(`MUI: The loadingPosition=\"end\" should be used in combination with endIcon.`);\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default LoadingButton;","import { LoadingButton } from \"@mui/lab\";\r\nimport { Card, Grid, TextField } from \"@mui/material\";\r\nimport { themeColors } from \"../../components/MatxTheme/themeColors\";\r\nimport { Box, styled } from \"@mui/system\";\r\nimport useAuth from \"app/hooks/useAuth\";\r\nimport { Formik } from \"formik\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { buttonSave, labelConfirmPassword, labelNewPassword } from \"app/utils/constantForms\";\r\nimport { logInRoute, value100Per, value100PerImp } from \"app/utils/constant\";\r\n\r\nconst FlexBox = styled(Box)(() => ({ display: \"flex\", alignItems: \"center\" }));\r\n\r\nconst JustifyBox = styled(FlexBox)(() => ({ justifyContent: \"center\" }));\r\n\r\nconst ContentBox = styled(Box)(() => ({\r\n  height: value100Per,\r\n  padding: \"32px\",\r\n  position: \"relative\",\r\n  background: \"rgba(0, 0, 0, 0.01)\",\r\n}));\r\n\r\nconst ErrorMsg = styled(Box)(() => ({\r\n  color: \"#FF3D57\",\r\n  fontSize: \"0.75rem\",\r\n  letterSpacing: \"0.03333em\",\r\n  margin: \"3px 14px 0px\",\r\n}));\r\n\r\nconst JWTRoot = styled(JustifyBox)(() => ({\r\n  background: \"#1A2038\",\r\n  minHeight: value100PerImp,\r\n  \"& .card\": {\r\n    maxWidth: 800,\r\n    minHeight: 400,\r\n    margin: \"1rem\",\r\n    display: \"flex\",\r\n    borderRadius: 12,\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\n// inital change password credentials\r\nconst initialValues = {\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\n// form field validation schema\r\nconst validationSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(6, \"Password must be 6 character length\")\r\n    .required(\"Password is required!\"),\r\n  confirmPassword: Yup.string()\r\n    .min(6, \"Password must be 6 character length\")\r\n    .required(\"Password is required!\"),\r\n});\r\n\r\nconst ResetPassword = () => {\r\n  const navigate = useNavigate();\r\n  const textError = themeColors.errorColor;\r\n  const [loading, setLoading] = useState(false);\r\n  const [confirmFlag, setConfirmFlag] = useState(false);\r\n\r\n  const { confirmPassword } = useAuth();\r\n\r\n  const handleFormSubmit = async (values) => {\r\n    setLoading(true);\r\n    setConfirmFlag(false);\r\n    try {\r\n      if (values.password === values.confirmPassword) {\r\n        navigate(logInRoute);\r\n        await confirmPassword(values.password);\r\n      } else {\r\n        setConfirmFlag(true);\r\n        values.password = \"\";\r\n        values.confirmPassword = \"\";\r\n        setLoading(false);\r\n      }\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <JWTRoot>\r\n      <Card className=\"card\">\r\n        <Grid container>\r\n          <Grid item sm={6} xs={12}>\r\n            <JustifyBox p={4} height={value100Per} sx={{ minWidth: 320 }}>\r\n              <img\r\n                src=\"/assets/images/illustrations/dreamer.svg\"\r\n                width={value100Per}\r\n                alt=\"\"\r\n              />\r\n            </JustifyBox>\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n            <ContentBox>\r\n              <Formik\r\n                onSubmit={handleFormSubmit}\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n              >\r\n                {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                }) => (\r\n                  <form onSubmit={handleSubmit}>\r\n                    <TextField\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      label={labelNewPassword}\r\n                      variant=\"outlined\"\r\n                      onBlur={handleBlur}\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      helperText={touched.password && errors.password}\r\n                      error={Boolean(errors.password && touched.password)}\r\n                      sx={{ mb: 1.5 }}\r\n                    />\r\n\r\n                    <TextField\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      name=\"confirmPassword\"\r\n                      type=\"password\"\r\n                      label={labelConfirmPassword}\r\n                      variant=\"outlined\"\r\n                      onBlur={handleBlur}\r\n                      value={values.confirmPassword}\r\n                      onChange={handleChange}\r\n                      helperText={\r\n                        touched.confirmPassword && errors.confirmPassword\r\n                      }\r\n                      error={Boolean(\r\n                        errors.confirmPassword && touched.confirmPassword\r\n                      )}\r\n                      sx={{ mb: 1.5 }}\r\n                    />\r\n\r\n                    {confirmFlag === true && (\r\n                      <ErrorMsg textcolor={textError}>\r\n                        Password doesn't matched\r\n                      </ErrorMsg>\r\n                    )}\r\n\r\n                    <LoadingButton\r\n                      type=\"submit\"\r\n                      color=\"primary\"\r\n                      loading={loading}\r\n                      variant=\"contained\"\r\n                      sx={{ my: 2 }}\r\n                    >\r\n                      {buttonSave}\r\n                    </LoadingButton>\r\n                  </form>\r\n                )}\r\n              </Formik>\r\n            </ContentBox>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </JWTRoot>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"sourceRoot":""}