{"version":3,"sources":["app/components/SimpleTable/SimpleTable.jsx","app/views/dashboard/CandidateAnalytics.jsx"],"names":["styled","Table","_ref","theme","whiteSpace","paddingLeft","paddingRight","textTransform","ContentBox","_defineProperty","margin","breakpoints","down","Title","Box","height","fontSize","fontWeight","marginRight","width","display","DragDropDialog","Select","alignContent","Dialog","position","top","left","transform","isMobile","bgcolor","boxShadow","p","CandidateAnalytics","useTheme","palette","_useState","useState","_useState2","_slicedToArray","dashboardApi","setDashboardApi","_useState3","_useState4","resumeUploaded","setResumeUploaded","_useState5","_useState6","cvUploadedDate","setCvUploadedDate","_useState7","_useState8","basicDetailsPercentage","setBasicDetailsPercentage","_useState9","_useState10","educationDetailsPercentage","setEducationDetailsPercentage","_useState11","_useState12","experienceDetailsPercentage","setExperienceDetailsPercentage","_useState13","_useState14","professionalInfoPercentage","setProfessionalInfoPercentage","_useState15","_useState16","skillSetPercentage","setSkillSetPercentage","_useState17","_useState18","cvUploadPercent","setCvUploadPercent","_useState19","_useState20","setApplied","_useState21","_useState22","setProccessed","_useState23","_useState24","setScheduled","_useState25","_useState26","setSelected","_useState27","_useState28","setNotSelected","_useState29","_useState30","setWithDraw","_useState31","localStorageUserfile","_useState32","open","setOpen","_useState33","_useState34","setOpen1","_useState35","_useState36","singleUpload","_useState37","_useState38","headingColor","setHeadingColor","useEffect","getCandidateDashboardDetails","then","users","_users$payload","payload","data","uploaded","dashboardDataGet","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_dashboardApi$detailF","_dashboardApi$detailF2","_dashboardApi$detailF3","_dashboardApi$detailF4","_dashboardApi$detailF5","_dashboardApi$detailF6","_dashboardApi$applied","_dashboardApi$applied2","_dashboardApi$applied3","_dashboardApi$applied4","_dashboardApi$applied5","_dashboardApi$applied6","wrap","_context","prev","next","processing","notUploaded","Number","detailFilled","primarySkillPercentage","appliedjobData","hasOwnProperty","applied","proccessed","scheduled","selected","notSelected","withDraw","stop","_x","apply","arguments","_jsxs","Fragment","children","_jsx","className","Grid","container","spacing","item","lg","md","sm","xs","StatCards","Card","sx","px","py","mb","headingCandidateDashboardChart","parseInt","_Fragment","id","ProfileUpload","invokeHelper","localStorage","setItem","setTimeout"],"mappings":"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","file":"static/js/49.2526276c.chunk.js","sourcesContent":["import {\r\n  Box,\r\n  styled,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@mui/material\";\r\n\r\nconst StyledTable = styled(Table)(({ theme }) => ({\r\n  whiteSpace: \"pre\",\r\n  \"& thead\": {\r\n    \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  \"& tbody\": {\r\n    \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n  },\r\n}));\r\n\r\nconst SimpleTable = ({ applied, proccessed, scheduled, selected, notSelected, withDraw }) => {\r\n  return (\r\n\r\n    <Box width=\"100%\" overflow=\"auto\">\r\n      <StyledTable>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">Applied</TableCell>\r\n            <TableCell align=\"center\">Proccessed</TableCell>\r\n            <TableCell align=\"center\">Scheduled</TableCell>\r\n            <TableCell align=\"center\">Selected</TableCell>\r\n            <TableCell align=\"center\">Not Selected</TableCell>\r\n            <TableCell align=\"center\">WithDraw</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell align=\"center\">{applied}</TableCell>\r\n            <TableCell align=\"center\">{proccessed}</TableCell>\r\n            <TableCell align=\"center\">{scheduled}</TableCell>\r\n            <TableCell align=\"center\">{selected}</TableCell>\r\n            <TableCell align=\"center\">{notSelected}</TableCell>\r\n            <TableCell align=\"center\">{withDraw}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </StyledTable>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SimpleTable;\r\n","/* eslint-disable eqeqeq */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Card, Dialog, Grid, Select, styled, useTheme } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { SimpleCard } from \"app/components\";\r\nimport SimpleTable from \"app/components/SimpleTable/SimpleTable\";\r\nimport { getCandidateDashboardDetails } from \"app/redux/actions/CommonActions\";\r\nimport { doughnuHeight, doughnuHeightCand, doughnutWidth, doughnutWidthCand, localStorageUserfile, value100Per } from \"app/utils/constant\";\r\nimport { notUploaded, uploaded, headingCandidateDashboardChart, processing } from \"app/utils/constantForms\";\r\nimport { isMobile } from \"app/utils/utils\";\r\nimport { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport DoughnutChart from \"./shared/Doughnut\";\r\nimport StatCards from \"./shared/StatCards\";\r\nimport ProfileUpload from \"app/components/ProfileUpload/ProfileUpload\";\r\n\r\nconst ContentBox = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n}));\r\n\r\nconst SimpleCardBox = styled(Box)(() => ({\r\n  height: \"auto!important\"\r\n}));\r\n\r\nconst Title = styled(\"span\")(() => ({\r\n  fontSize: \"15px\",\r\n  fontWeight: \"500\",\r\n  marginRight: \".5rem\",\r\n  textTransform: \"capitalize\",\r\n  width: \"50%\",\r\n  display: \"inline-grid\",\r\n}));\r\n\r\nconst DropDown = styled(Select)(() => ({\r\n  display: \"inline-grid\",\r\n  width: \"46%\",\r\n  height: \"44px\",\r\n  alignContent: \"center\",\r\n}));\r\n\r\nconst DragDropDialog = styled(Dialog)(() => ({\r\n\r\n}));\r\nconst DragDropBox = styled(Box)(() => ({\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: !isMobile() ? \"50%\" : 350,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n}));\r\n\r\nconst CandidateAnalytics = () => {\r\n  const { palette } = useTheme();\r\n  const [dashboardApi, setDashboardApi] = useState();\r\n  const [resumeUploaded, setResumeUploaded] = useState(\"\");\r\n  const [cvUploadedDate, setCvUploadedDate] = useState(\"\");\r\n  const [basicDetailsPercentage, setBasicDetailsPercentage] = useState(0);\r\n  const [educationDetailsPercentage, setEducationDetailsPercentage] = useState(0);\r\n  const [experienceDetailsPercentage, setExperienceDetailsPercentage] = useState(0);\r\n  const [professionalInfoPercentage, setProfessionalInfoPercentage] = useState(0);\r\n  const [skillSetPercentage, setSkillSetPercentage] = useState(0);\r\n  const [cvUploadPercent, setCvUploadPercent] = useState(0);\r\n  const [applied, setApplied] = useState(0);\r\n  const [proccessed, setProccessed] = useState(0);\r\n  const [scheduled, setScheduled] = useState(0);\r\n  const [selected, setSelected] = useState(0);\r\n  const [notSelected, setNotSelected] = useState(0);\r\n  const [withDraw, setWithDraw] = useState(0);\r\n  const [open, setOpen] = useState(!(localStorageUserfile()));\r\n  const [open1, setOpen1] = useState(!(localStorageUserfile()));\r\n  const [singleUpload, setSingleUpload] = useState(true);\r\n  const [headingColor, setHeadingColor] = useState();\r\n\r\n  useEffect(() => {\r\n    getCandidateDashboardDetails().then((users) => setDashboardApi(users?.payload?.data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dashboardApi?.resumeUploaded === false ?\r\n      (localStorageUserfile() === 'uploaded' ?\r\n        setHeadingColor('rgb(255, 175, 56)') :\r\n        setHeadingColor('rgb(255, 61, 87)')) :\r\n      (resumeUploaded === uploaded && localStorageUserfile()) ?\r\n        setHeadingColor('rgb(8, 173, 108)') :\r\n        setHeadingColor('rgb(25, 118, 210)')\r\n  })\r\n\r\n  const dashboardDataGet = async (dashboardApi) => {\r\n    setResumeUploaded(dashboardApi?.resumeUploaded === false ? (localStorageUserfile() === 'uploaded' ? processing : notUploaded) : uploaded);\r\n    setCvUploadedDate(dashboardApi?.cvUploadedDate);\r\n\r\n    setBasicDetailsPercentage(Number(dashboardApi?.detailFilled?.basicDetailsPercentage));\r\n    setEducationDetailsPercentage(Number(dashboardApi?.detailFilled?.educationDetailsPercentage));\r\n    setExperienceDetailsPercentage(Number(dashboardApi?.detailFilled?.experienceDetailsPercentage));\r\n    setProfessionalInfoPercentage(Number(dashboardApi?.detailFilled?.professionalInfoPercentage));\r\n    setSkillSetPercentage(Number(dashboardApi?.detailFilled?.primarySkillPercentage));\r\n    setCvUploadPercent(Number(dashboardApi?.detailFilled?.cvUploadPercent));\r\n    setApplied(dashboardApi?.appliedjobData.hasOwnProperty(\"applied\") === true ? Number(dashboardApi?.appliedjobData?.applied) : 0);\r\n    setProccessed(dashboardApi?.appliedjobData.hasOwnProperty(\"proccessed\") === true ? Number(dashboardApi?.appliedjobData?.proccessed) : 0);\r\n    setScheduled(dashboardApi?.appliedjobData.hasOwnProperty(\"scheduled\") === true ? Number(dashboardApi?.appliedjobData?.scheduled) : 0);\r\n    setSelected(dashboardApi?.appliedjobData.hasOwnProperty(\"selected\") === true ? Number(dashboardApi?.appliedjobData?.selected) : 0);\r\n    setNotSelected(dashboardApi?.appliedjobData.hasOwnProperty(\"close\") === true ? Number(dashboardApi?.appliedjobData?.notSelected) : 0);\r\n    setWithDraw(dashboardApi?.appliedjobData.hasOwnProperty(\"withDraw\") === true ? Number(dashboardApi?.appliedjobData?.withDraw) : 0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dashboardDataGet(dashboardApi);\r\n  }, [{ dashboardDataGet }]);\r\n\r\n  const invokeHelper = () => {\r\n    localStorage.setItem(\"userfile\", \"uploaded\");\r\n    setTimeout(function () {\r\n      setOpen1(false);\r\n      setOpen(false);\r\n    }, 1000)\r\n\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ContentBox className=\"analytics\">\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={7} md={7} sm={12} xs={12}>\r\n            <StatCards\r\n              resumeUploaded={resumeUploaded}\r\n              cvUploadedDate={cvUploadedDate}\r\n              headingColor={headingColor}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={5} md={5} sm={12} xs={12}>\r\n            <Card sx={{ px: 2, py: 2, mb: 3 }}>\r\n              <Title>{headingCandidateDashboardChart} : {parseInt(basicDetailsPercentage+educationDetailsPercentage+experienceDetailsPercentage+professionalInfoPercentage+skillSetPercentage+cvUploadPercent) ? parseInt(basicDetailsPercentage+educationDetailsPercentage+experienceDetailsPercentage+professionalInfoPercentage+skillSetPercentage+cvUploadPercent):0}% </Title>\r\n              <></>\r\n              {/* <DoughnutChart\r\n                height={doughnuHeightCand}\r\n                width={!isMobile() ? value100Per : doughnutWidthCand}\r\n                color={[\r\n                  palette.error.main,\r\n                  palette.secondary.main,\r\n                  palette.primary.main,\r\n                  palette.success.main,\r\n                ]}\r\n                basicDetailsPercentage={basicDetailsPercentage}\r\n                educationDetailsPercentage={educationDetailsPercentage}\r\n                experienceDetailsPercentage={experienceDetailsPercentage}\r\n                professionalInfoPercentage={professionalInfoPercentage}\r\n              /> */}\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </ContentBox>\r\n      <>\r\n        <DragDropDialog open={open} id=\"candidateDashboradProfileUpload\">\r\n          <ProfileUpload setOpen1={setOpen1} invokeHelper={invokeHelper} singleUpload={singleUpload} />\r\n        </DragDropDialog>\r\n      </>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CandidateAnalytics;\r\n"],"sourceRoot":""}