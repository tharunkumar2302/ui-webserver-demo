{"version":3,"sources":["app/views/sessions/ChangePassword.jsx"],"names":["ContentBox","styled","Box","height","value100Per","padding","position","background","ErrorMsg","color","fontSize","letterSpacing","margin","ButtonWrapper","display","gap","flexFlow","marginTop","ChangeBox","justifyContent","maxWidth","minHeight","borderRadius","alignItems","initialValues","oldPassword","newPassword","confirmPassword","validationSchema","Yup","shape","min","required","ChangePassword","textError","themeColors","errorColor","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","confirmFlag","setConfirmFlag","changePassword","useAuth","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","t0","stop","_x","apply","arguments","goBack","window","history","back","_jsx","children","_jsxs","Card","className","labelChangePassword","Formik","onSubmit","_ref2","errors","touched","handleChange","handleBlur","handleSubmit","TextField","fullWidth","size","name","type","label","labelOldPassword","variant","onBlur","value","onChange","helperText","error","Boolean","sx","mb","labelNewPassword","labelConfirmPassword","textcolor","Button","onClick","style","width","buttonSave","LoadingBar"],"mappings":"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","file":"static/js/9.40c1c998.chunk.js","sourcesContent":["import { Button } from \"@mui/material\";\r\nimport { Card, TextField } from \"@mui/material\";\r\nimport { themeColors } from \"../../components/MatxTheme/themeColors\";\r\nimport { Box, styled } from \"@mui/system\";\r\nimport useAuth from \"app/hooks/useAuth\";\r\nimport { Formik } from \"formik\";\r\nimport { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  buttonSave,\r\n  labelConfirmPassword,\r\n  labelNewPassword,\r\n  labelOldPassword,\r\n  labelChangePassword,\r\n} from \"app/utils/constantForms\";\r\nimport { value100Per } from \"app/utils/constant\";\r\nimport LoadingBar from \"app/components/LoadingBar/LoadingBar\";\r\n\r\nconst ContentBox = styled(Box)(() => ({\r\n  height: value100Per,\r\n  padding: \"32px\",\r\n  position: \"relative\",\r\n  background: \"rgba(0, 0, 0, 0.01)\",\r\n}));\r\n\r\nconst ErrorMsg = styled(Box)(() => ({\r\n  color: \"#FF3D57\",\r\n  fontSize: \"0.75rem\",\r\n  letterSpacing: \"0.03333em\",\r\n  margin: \"3px 14px 0px\",\r\n}));\r\n\r\nconst ButtonWrapper = styled(\"div\")(() => ({\r\n  display: \"flex\",\r\n  gap: \"20px\",\r\n  flexFlow: \"wrap\",\r\n  marginTop:\"10px\"\r\n}));\r\n\r\nconst ChangeBox = styled(Box)(() => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n\r\n  \"& .card\": {\r\n    maxWidth: 600,\r\n    minHeight: 300,\r\n    margin: \"6rem\",\r\n    display: \"flex\",\r\n    borderRadius: 12,\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\n// inital change password credentials\r\nconst initialValues = {\r\n  oldPassword: \"\",\r\n  newPassword: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\n// form field validation schema\r\nconst validationSchema = Yup.object().shape({\r\n  oldPassword: Yup.string()\r\n    .min(6, \"Password must be 6 character length\")\r\n    .required(\"Password is required!\"),\r\n  newPassword: Yup.string()\r\n    .min(6, \"Password must be 6 character length\")\r\n    .required(\"Password is required!\"),\r\n  confirmPassword: Yup.string()\r\n    .min(6, \"Password must be 6 character length\")\r\n    .required(\"Password is required!\"),\r\n});\r\n\r\nconst ChangePassword = () => {\r\n  const textError = themeColors.errorColor;\r\n  const [loading, setLoading] = useState(false);\r\n  const [confirmFlag, setConfirmFlag] = useState(false);\r\n\r\n  const { changePassword } = useAuth();\r\n\r\n  const handleFormSubmit = async (values) => {\r\n    setLoading(true);\r\n    setConfirmFlag(false);\r\n    try {\r\n      if (values.newPassword === values.confirmPassword) {\r\n        await changePassword(values.newPassword, values.oldPassword);\r\n        setLoading(false);\r\n      } else {\r\n        setConfirmFlag(true);\r\n        values.newPassword = \"\";\r\n        values.confirmPassword = \"\";\r\n        setLoading(false);\r\n      }\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const goBack = () => {\r\n    window.history.back();\r\n  };\r\n\r\n  return (\r\n    <ChangeBox>\r\n      <Card className=\"card\">\r\n        <ContentBox>\r\n          <span className=\"labelChangePassword\">{labelChangePassword}</span>\r\n          <Formik\r\n            onSubmit={handleFormSubmit}\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <TextField\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"oldPassword\"\r\n                  type=\"password\"\r\n                  label={labelOldPassword}\r\n                  variant=\"outlined\"\r\n                  onBlur={handleBlur}\r\n                  value={values.oldPassword}\r\n                  onChange={handleChange}\r\n                  helperText={touched.oldPassword && errors.oldPassword}\r\n                  error={Boolean(errors.oldPassword && touched.oldPassword)}\r\n                  sx={{ mb: 1.5 }}\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"newPassword\"\r\n                  type=\"password\"\r\n                  label={labelNewPassword}\r\n                  variant=\"outlined\"\r\n                  onBlur={handleBlur}\r\n                  value={values.newPassword}\r\n                  onChange={handleChange}\r\n                  helperText={touched.newPassword && errors.newPassword}\r\n                  error={Boolean(errors.newPassword && touched.newPassword)}\r\n                  sx={{ mb: 1.5 }}\r\n                />\r\n\r\n                <TextField\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"confirmPassword\"\r\n                  type=\"password\"\r\n                  label={labelConfirmPassword}\r\n                  variant=\"outlined\"\r\n                  onBlur={handleBlur}\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  helperText={touched.confirmPassword && errors.confirmPassword}\r\n                  error={Boolean(\r\n                    errors.confirmPassword && touched.confirmPassword\r\n                  )}\r\n                  sx={{ mb: 1.5 }}\r\n                />\r\n\r\n                {confirmFlag === true && (\r\n                  <ErrorMsg textcolor={textError}>\r\n                    Password doesn't matched\r\n                  </ErrorMsg>\r\n                )}\r\n\r\n                <ButtonWrapper>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={goBack}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n\r\n                  <Button\r\n                    style={{ width: \"78px\" }}\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    {buttonSave}\r\n                  </Button>\r\n                </ButtonWrapper>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </ContentBox>\r\n        <LoadingBar loading={loading} />\r\n      </Card>\r\n    </ChangeBox>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n"],"sourceRoot":""}